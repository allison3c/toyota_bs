@{
    Layout = "_LayoutMenu";
    ViewData["Title"] = "类型管理";
}
@section Scripts{
    <!-- 1. Load -->
    <script type="text/javascript">
        var _grid, _gridName, list;
        var issearch = false;
        $(document).ready(function () {
            fn_Initial();
            fn_InitialData();
            fn_GridInit();
        });
    </script>
    <!-- 2. Init -->
    <script type="text/javascript">
        function fn_Initial() {
            _gridName = 'grid';
            _grid = $('#' + _gridName);
            $("#btnSearch").on("click", function () {
                fn_Search();
            });
            $("#btnAddType").on("click", function () {
                fn_addRow();
            });
            $("#selGroupLst").on("change", function () {
                //fn_getType();
                fn_Search();
            });
            $("#btnSave").on("click", function () {
                fn_Save();
            });
            $("#btnAdd").on("click", function () {
                fn_test();
            });
        }
    </script>
    <!-- 3. InitData -->
    <script type="text/javascript">
        function fn_InitialData() {
            InitGroup();
            //fn_Search();
        }
    </script>

    <!--Grid-->
    <script type="text/javascript">
        function fn_GridInit() {
            _grid.jqGrid({
                datatype: 'local',
                colModel: [
                    {
                        name: 'GroupCode', label: '类型组代码', width: 40, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }
                    },
                    {
                        name: 'GroupName', label: '类型组名', width: 70, align: 'left',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }
                    },
                    {
                        name: 'Code', label: '类型代码', width: 50, editable: true, edittype: "text", align: 'left', maxLength: "1"
                    },
                    {
                        name: 'Name', label: '类型名', width: 100, editable: true, edittype: "text", align: 'left'
                    },
                    {
                        name: 'UserYN', label: '使用与否', width: 30, align: 'center',
                        formatter: 'checkbox', formatoptions: { disabled: false }, editoptions: { value: 'True:False' }
                    },
                     {
                         name: 'Delete', label: '删除', width: 30, align: 'center',
                         cellattr: function (rowId, val, rawObject, cm, rdata) {
                             return 'class="readonlycell"';
                         }, formatter: function (v, o, r) {
                             if (r.RowId != "") {
                                 return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;" disabled="disabled"  onclick="fn_Delete(\'' + o.rowId + '\')">删除</button>';
                             } else {
                                 return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_Delete(\'' + o.rowId + '\')">删除</button>';
                             }
                         }, unformat: function (v, o, r) {
                             return "";
                         }
                     },
                    {
                        name: 'RowId', hidden: true
                    },
                    {
                        name: 'Id', hidden: true
                    }

                ],
                width: $('#Grid').width(),
                height: 'auto',
                rownumbers: true,
                multiselect: false,
                rownumWidth: 50,
                rowNum: 15,
                rowList: [15, 30, 100],
                footerrow: false,
                cellsubmit: 'clientArray',
                pager: jQuery('#pager'),
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                afterInsertRow: function (rowid, r) {
                },
                gridComplete: function (id) {
                    var rowNum = parseInt($(this).getGridParam("records"), 50);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                    }

                    //fix the pager position
                    $('#pager_left').css('width', '25%');
                    $('#pager_right').css('width', '25%');
                    $(_grid).find("input[type=checkbox][offval]").click(function () {
                        $(event.target).closest('tr').addClass("edited");
                        $(event.srcElement).closest('tr').addClass("edited");
                    });
                    var data = $(_grid).jqGrid("getRowData");
                    if (data) {
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].RowId != "") {
                                $($(_grid).find("[aria-describedby=grid_Code]")[i]).addClass("readonlycell");
                                if (data[i].Code=="D" && data[i].GroupCode=="15") {
                                    $($(_grid).find("[aria-describedby=grid_Name]")[i]).addClass("readonlycell");
                                    $($(_grid).find("[aria-describedby=grid_UserYN]")[i]).addClass("readonlycell");
                                    $(_grid).find('tr:eq(' + (i + 1) + ') input:checkbox').attr("disabled", true)
                                }
                            }
                        }
                    }

                    $("[aria-describedby='grid_rn']").addClass("readonlycell");
                },
                onCellSelect: function (rowid, iCol, cellcontent, e) {
                    var rowdata = $(_grid).jqGrid('getRowData', rowid);
                    if (rowdata.RowId != "") {
                        $(_grid).setColProp('Code', { 'editable': false });
                        if (rowdata.Code == "D" && rowdata.GroupCode=="15") {
                            $(_grid).setColProp('Name', { 'editable': false });
                        } else {
                            $(_grid).setColProp('Name', { 'editable': true });
                        }
                        //$(_grid).setColProp('Name', { 'editable': true });
                    } else {
                        $(_grid).setColProp('Code', { 'editable': true });
                        $(_grid).setColProp('Name', { 'editable': true });
                    }
                },
                afterSaveCell: function (rowid, name, val, iRow, iCol) {
                    if (name == "Code") {
                        $(_grid).setRowData(rowid, { Code: val.toUpperCase() });
                        var data = $(_grid).jqGrid("getRowData");
                        if (data) {
                            for (var i = 0; i < data.length; i++) {
                                if (data[i].RowId == "" && rowid != data[i].Id && data[i].Code!="") {
                                    list.push(data[i]);
                                }
                            }
                        }
                        var issame = false;
                        for (var i = 0; i < list.length; i++) {
                            if (val.toUpperCase() == list[i].Code && list[i].GroupCode == $(_grid).jqGrid("getRowData", rowid).GroupCode) {
                                issame = true;
                            }
                        }
                        if (val.length > 1) {
                            $.sa.warning("类型代码长度为一位.");
                            $(_grid).setRowData(rowid, { Code: "" });
                        } else if (issame) {
                            $.sa.warning("输入了重复的类型代码.");
                            $(_grid).setRowData(rowid, { Code: "" });
                        }
                    }
                }
            });
        }
        function fn_SetGrid(mydata) {
            mydata = mydata || [];
            _grid.clearGridData()
            .setGridParam({
                data: mydata
            }).trigger('reloadGrid');
        }
        function fn_SaveCell() {
            var $t = $(this);
            var $ecs = $(".edit-cell", $t);
            $ecs.each(function (idx, ec) {
                var iRow = $(ec).parent().index();
                var iCol = $(ec).index();
                $t.saveCell(iRow, iCol);
            });
        }
    </script>
    <!--Event-->
    <script type="text/javascript">
        function InitGroup() {
            //$.sa.get('http://localhost:6505/toyota/api/v1/Users/GetGroupList',
            $.sa.get(GETGROUPLIST,
              {
                  "success": function (data) {
                      $("#selGroupLst").html(JsonToCboList("Name", "Value", JSON.parse(data.body)));
                  },
                  "failure": function (data, statusText, jqXHR) {
                  }
              });
        }
        function fn_Search() {
            issearch = true;
            //$.sa.get('http://localhost:6505/toyota/api/v1/Users/GetTypeList',
            $.sa.get(GETTYPELIST,
              {
                  groupCode: $("#selGroupLst").val(),
                  name: $("#txtTypeName").val(),
                  useYN: $("[name=UseYN]").filter(":Checked").val()
              },
            {
                "success": function (data) {
                    if (data != null) {
                        fn_SetGrid(eval(data.body));
                        list = eval(data.body);
                        //$.sa.alert('查询完毕', { maxWidth: '400px', minWidth: '300px', showClose: false });
                    }
                },
                "failure": function (data, statusText, jqXHR) {
                }
            }
            , $("body"));
        }
        function fn_addRow() {
            if (!issearch) {
                $.sa.warning("请先查询！");
                return;
            }
            var ids = _grid.getDataIDs();
            var pref = $.jgrid.uidPref;
            var newid = 1;
            if ($("#selGroupLst").val() == "0") {
                $.sa.warning("请先类型组名.", {
                    fnClose: function () {
                    }
                });
                return;
            }
            if (ids && ids.length > 0) {
                var regx = new RegExp(pref, 'g');
                var nids = ids.join(',').replace(regx, '').split(',');
                var maxid = Math.max.apply(Math, nids);
                newid = maxid + 1;
            }
            newid = pref + (newid).toString();
            var rowdata = {
                GroupName: $("#selGroupLst option:selected").text(),
                GroupCode: $("#selGroupLst").val(),
                UserYN: 'True',
                RowId: "",
                Id: newid
            };
            _grid.addRowData(newid, rowdata, 'last');
            $(_grid.getGridRowById(newid)).addClass("edited");
        }
        /* function fn_getType() {
             fn_Search();
             $.sa.get('http://localhost:6505/toyota/api/v1/Users/GetTypeList',
                         //$.sa.get(GETTYPELIST,
                           {
                               groupCode: $("#selGroupLst").val(),
                               name: "",
                               useYN: "A"
                           },
                         {
                             "success": function (data) {
                                 if (data != null) {
                                     //fn_SetGrid(eval(data.body));
                                     list = eval(data.body);
                                 }
                             },
                             "failure": function (data, statusText, jqXHR) {
                             }
                         });
         }*/      
        function fn_Save() {
            fn_SaveCell.call(_grid);
            if (Validate()) {
                var rowData = _grid.getChangedCells('all');
                var param = { list: rowData, InUserId: '@Context.Request.Cookies[SessionKeys.SESSION_USERID]' };
                $.sa.confirm('是否要保存？', {
                    fnOk: function () {
                        $(".close").click();
                        //$.sa.post('http://localhost:6505/toyota/api/v1/Users/UpdateType',
                        $.sa.post(UPDATETYPE,
                             JSON.stringify(param),
                            {
                                "success": function (data) {
                                    if (data != null) {
                                        $.sa.warning("保存成功！");
                                        fn_Search();
                                    } else {
                                        $.sa.warning("保存失败！");
                                    }
                                },
                                "failure": function (data, statusText, jqXHR) {
                                }
                            }, $("body"));
                    }
                });
            }
        }
        function Validate() {
            var iscode = true;
            var isname = true;
            var ids = _grid.getChangedCells('all');
            if (ids.length <= 0) {
                $.sa.warning("没有需要保存的数据。");
                return false;
            }
            $(ids).each(function () {
                if (this.Code == "") {
                    iscode = false;
                }
            });
            $(ids).each(function () {
                if (this.Name == "") {
                    isname = false;
                }
            });
            if (!iscode) {
                $.sa.warning("请输入正确的类型代码。");
                return false;
            } else if (!isname) {
                $.sa.warning("请输入正确的类型名。");
                return false;
            } else {
                return true;
            }
        }
        function fn_Delete(obj) {
            fn_SaveCell.call(_grid);
            var rowdata = $(_grid).jqGrid("getRowData", obj);
            for (var i = 0; i < list.length; i++) {
                if (rowdata.Code == list[i].Code && rowdata.GroupCode == list[i].GroupCode) {
                    list[i].Code = "DELETE";
                }
            }
            $(_grid.getGridRowById(obj)).removeClass("edited");
            _grid.delRowData(obj);
        }

    </script>
}
<div class="row gap-top">
    <div class="col-md-12">
        <span class="fa fa-flag fa-lg gap-icon"></span><span class="page-mtitle">基础设置</span><span>&nbsp;>&nbsp;</span>
        <span class="page-title">类型管理</span>
        <div class="pull-right">
            <button class="btn btn-primary" id="btnSearch">
                <span class="fa fa-search gap-icon"></span>查询
            </button>
            <button id="btnSave" class="btn btn-primary">
                <span class="fa fa-save gap-icon"></span>保存
            </button>
            <button id="btnAdd" class="btn btn-primary" style="display:none">
                <span class="fa fa-plus gap-icon"></span>新建
            </button>
        </div>
    </div>
</div>
<div class="row gap-top">
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">类型组名</span>
            <select class="form-control orgWidth" id="selGroupLst" disabled></select>
        </div>
    </div>
    <div class="col-md-4 col-sm-4">
        <div class="input-group">
            <span class="input-group-addon title-sm">类型名</span>
            <input type="text" class="form-control" id="txtTypeName" maxlength="200" />
        </div>
    </div>
    <div class="col-md-5">
        <div class="input-group">
            <span class="input-group-addon title-sm">使用与否</span>
            <div class="form-control" id="rdo">
                <label class="radio-inline">
                    <input type="radio" name="UseYN" id="fullAttend" value="A" checked />
                    全部
                </label>
                <label class="radio-inline">
                    <input type="radio" name="UseYN" id="continuousAttend" value="1" />
                    使用
                </label>
                <label class="radio-inline">
                    <input type="radio" name="UseYN" id="continuousAttend" value="0" />
                    不使用
                </label>
            </div>
        </div>
    </div>
</div>
<div class="row gap-top">
    <div class="col-md-12 col-sm-12">
        <div class="pull-right">
            <button class="btn btn-primary" id="btnAddType">
                <span class="fa fa-plus gap-icon"></span>添加类型
            </button>
            <button class="btn btn-primary" id="btnType" style="display:none">
                <span class="fa fa-minus gap-icon"></span>删除类型
            </button>
        </div>
    </div>
</div>
<div class="row gap-top">
    <div id="Grid" class="col-md-12">
        <table id="grid" class="ui-jqgrid-htable"></table>
        <div id="pager" class="page">
        </div>
    </div>
</div>
