@{
    ViewData["Title"] = "日历管理";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}
@section HeadCss{
 <link href="~/lib/fullcalendar-3.0.1/fullcalendar.css" rel="stylesheet" />
 <link href="~/lib/fullcalendar-3.0.1/fullcalendar.print.css" rel="stylesheet"  media='print'/>
  <style type="text/css">
    body {
	    margin: 40px 10px;
	    padding: 0;
	    font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;
	    font-size: 14px;
    }

    #calendar {
	    max-width: 900px;
	    margin: 0 auto;
    }
  </style>
}
<div class="row gap-top">
    <div class="col-md-12">
        <span class="fa fa-flag fa-lg gap-icon"></span><span class="page-mtitle">日历管理</span><span>&nbsp;>&nbsp;</span>
        <span class="page-title">日历管理</span>
    </div>
</div>
<div class="row gap-top">
    <div id='calendar'></div>
</div>
@section scripts{
    <script src="~/lib/fullcalendar-3.0.1/lib/moment.min.js"></script>
    <script src="~/lib/fullcalendar-3.0.1/fullcalendar.js"></script>
    <script src="~/lib/fullcalendar-3.0.1/locale/zh-cn.js"></script>
    <script type="text/javascript">
        var _item, _event;
        $(document).ready(function () {
            $('#calendar').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay,listWeek'
                },
                eventRender: function (event, element) {
                    element.bind('dblclick', function (event) {
                        fn_RegItem(_item)
                    });

                },
                defaultDate: '@ViewBag.Now',
                navLinks: true, // can click day/week names to navigate views
                editable: true,
                eventLimit: true, // allow "more" link when too many events
                //displayEventTime :false,
                //eventSources: [
                //        // your event source
                //        {
                //            events: function (start, end, timezone, callback) {
                //                fn_SearchDataS(start, end, timezone, callback)
                //            },
                //            color: "yellow",
                //            textColor:"black"
                //        },
                //         {
                //             events: function (start, end, timezone, callback) {
                //                 fn_SearchDataT(start, end, timezone, callback)
                //             },
                //             color: "green",
                //             textColor: "white"
                //         }
                //         // any other sources...
                //],
                events: function (start, end, timezone, callback) {
                    fn_SearchDataS(start, end, timezone, callback)
                },
                //height: calcCalendarHeight(),
                //contentHeight: 'auto',
                eventClick: function (event) {
                    //console.log(new Date(moment(event.start).format("YYYY-MM-DD HH:mm")));
                    //console.log(event.type);
                    //console.log($('#calendar').fullCalendar('getEventSourceById', event.id));
                    var item = {}
                    item.Id = event.id;
                    item.Title = event.title;
                    item.SDate = moment(event.start).format("YYYY-MM-DD HH:mm");
                    item.EDate = event.end == null ? moment(event.start).format("YYYY-MM-DD HH:mm") : moment(event.end).format("YYYY-MM-DD HH:mm");
                    item.Content = event.content;
                    item.Type = event.type;
                    //fn_RegItem(item);
                    _item = item;
                    _event = event;
                    //$('#calendar').fullCalendar('updateEvent', event);
                },
                eventAfterRender: function (event, element, view) {
                    // && view.name == "month"
                    if (event.type != "S") {
                        if (view.type == "month") {
                            element.find('.fc-content').append('<span>' + (event.title.length > 2 ? event.title.substring(0, 2) : event.title) + '</span><span id="' + event.id + '" onclick="fn_DeleteItem(' + event.id + ')" style="color: white;float: right;cursor: pointer;margin-right: 3px;">x</span>');
                            element.find('.fc-title').css("display", "none");
                        } else {
                            element.find('.fc-content').append('<span id="' + event.id + '" onclick="fn_DeleteItem(' + event.id + ')" style="color: white;float: right;cursor: pointer;margin-right: 3px;">x</span>');
                        }
                    }
                },
                //resourceAreaWidth:"10%",
                dayClick: function (date, jsEvent, view) {
                    //$(this).css('background-color', 'red');
                    //if (view.name == "month") {
                    var item = {};
                    var dhm = new Date();
                    var hour = dhm.getHours() < 10 ? "0" + dhm.getHours() : dhm.getHours();
                    var minute = dhm.getMinutes() < 10 ? "0" + dhm.getMinutes() : dhm.getMinutes();
                    item.SDate = moment(date).format("YYYY-MM-DD") + " " + hour + ":" + minute;
                    item.EDate = moment(date).format("YYYY-MM-DD") + " " + hour + ":" + minute;
                    item.Id = 0;
                    fn_RegItem(item);
                    //}
                },
                viewRender: function (view, element) {
                },
                eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {
                    if (event.type == "S") {
                        revertFunc();
                        return false;
                    }
                    var myDialog = $.sa.confirm('确定变更时间？', {
                        fnOk: function () {
                            var item = {}
                            item.Id = event.id;
                            item.Title = event.title;
                            item.SDate = moment(event.start).format("YYYY-MM-DD HH:mm");
                            item.EDate = event.end == null ? moment(event.start).format("YYYY-MM-DD HH:mm") : moment(event.end).format("YYYY-MM-DD HH:mm");
                            item.Content = event.content;
                            item.Type = event.type;
                            item.UserID = '@Context.Request.Cookies[SessionKeys.SESSION_USERID]';
                            fn_SaveItem(item, myDialog);
                        }, fnCancel: function () {
                            revertFunc();
                        }
                    });
                }
                //,
                //eventLimitClick: function (cellInfo, jsEvent) {
                //    //console.log(cellInfo);

                //}

                ,eventResize: function(event, delta, revertFunc) {
                        if (event.type == "S") {
                            revertFunc();
                            return false;
                        }
                        var myDialog = $.sa.confirm('确定变更时间？', {
                            fnOk: function () {
                                var item = {}
                                item.Id = event.id;
                                item.Title = event.title;
                                item.SDate = moment(event.start).format("YYYY-MM-DD HH:mm");
                                item.EDate = event.end == null ? moment(event.start).format("YYYY-MM-DD HH:mm") : moment(event.end).format("YYYY-MM-DD HH:mm");
                                item.Content = event.content;
                                item.Type = event.type;
                                item.UserID = '@Context.Request.Cookies[SessionKeys.SESSION_USERID]';
                                fn_SaveItem(item, myDialog);
                            }, fnCancel: function () {
                                revertFunc();
                            }
                        });
                    }
            });
            function calcCalendarHeight() {
                var h = $(window).height() - 40;
                return h;
            }

            $(window).resize(function () {
                $('#calendar').fullCalendar('option', 'height', calcCalendarHeight());
            });
        });
    </script>
    <script type="text/javascript">
        function fn_RegItem(item) {
            $.sa.pop("/Calendar/CAL010P", {
                params: {pamItem:JSON.stringify(item)}, width: 600, maxHeight: 500,
                title: '<span class="fa fa-hand-o-right gap-icon-right"></span><span>登记事项</span>'
                , popcallback: function (data) {
                    if (_event != undefined && _event.id != undefined && _event.id == item.Id) {
                        _event.title = data.Title;
                        _event.start = data.SDate;
                        _event.end = data.EDate;
                        _event.content = data.Content;
                        _event.backgroundColor = "#00b7ee";
                        _event.borderColor = "#05a2d1";
                        _event.textColor = "white";
                        $('#calendar').fullCalendar('updateEvent', _event);
                        $('#calendar').fullCalendar('refetchEvent', _event);

                    } else if (item.Id == 0) {
                        var addsource = [];
                        var eventobj = {};
                        eventobj.title = data.Title;
                        eventobj.start = data.SDate;
                        eventobj.end = data.EDate;
                        eventobj.content = data.Content;
                        eventobj.id = data.Id;
                        eventobj.backgroundColor = "#00b7ee";
                        eventobj.borderColor = "#05a2d1";
                        eventobj.textColor = "white";
                        addsource.push(eventobj)
                        $('#calendar').fullCalendar('addEventSource', addsource);
                        $('#calendar').fullCalendar('refetchEvent', addsource);
                    }
                    //$('#calendar').fullCalendar('refetchEvents');
                }
            });
        }
    </script>
    <script type="text/javascript">
        function fn_SearchDataS(start, end, timezone, callback) {
            var events = [];
            var view = $('#calendar').fullCalendar('getView');
            var year=view.end._d.getFullYear();
            var month = "0" + (view.end._d.getMonth() == 0 ? 12 : view.end._d.getMonth());
            var usemonth = month.length > 2 ? month.substring(1) : month;
            var parmDate = "";
            //if (view.type == "basicDay")
            //    parmDate = view.start._i;
            //else if (view.type == "basicWeek")
            //    parmDate = view.start._i;
            //else
            parmDate = view.start._d.getFullYear() + "-" + usemonth + "-" + "01";
            console.log(parmDate);
            console.log(view.type+"开始时间:" + moment(new Date(start._d)).format("YYYY-MM-DD"));
            console.log(view.type + "结束时间:" + moment(new Date(end._d)).format("YYYY-MM-DD"));
            $.sa.get(SEACHCALENDERITEM, {
                'UserId': '@Context.Request.Cookies[SessionKeys.SESSION_USERID]',
                'SDate': moment(new Date(start._d)).format("YYYY-MM-DD"),
                'EDate': moment(new Date(end._d)).format("YYYY-MM-DD")
            },
            {
                "success": function (data) {
                    //$('#calendar').fullCalendar('destroy');
                    $('#calendar').fullCalendar('removeEvents');
                    if (data != null && data.body!="") {
                        var resultList = JSON.parse(data.body);
                        $.each(resultList, function (x, obj) {
                            events.push({
                                id: obj.Id,
                                title: obj.Title,
                                start: obj.SDate,
                                end: obj.EDate,
                                type:obj.Type,
                                content: obj.Content,
                                backgroundColor: obj.Type == "S" ? "#fd6100" : "#00b7ee",
                                borderColor: obj.Type == "S" ? "#dc5705" : "#05a2d1",
                                textColor: obj.Type == "S" ? "black" : "white"
                            });
                        });
                        callback(events);
                    }
                },
                "failure": function (data, statusText, jqXHR) {
                    $("#callback_1_layer").html(data.msg);
                }
            }
            , $("body"));
        }
        @*function fn_SearchDataT(start, end, timezone, callback) {
            $.sa.get(SEACHCALENDERITEM, {
                'UserId': '@Context.Request.Cookies[SessionKeys.SESSION_USERID]',
                'Date': '@ViewBag.Now'.substring(0, 10),
                'SearchType': 'T'
            },
            {
                "success": function (data) {
                    if (data != null && data.body != "") {
                        var resultList = JSON.parse(data.body);
                        var events = [];
                        $.each(resultList, function (x, obj) {
                            events.push({
                                id: obj.Id,
                                title: obj.Title,
                                start: obj.SDate,
                                end: obj.EDate,
                                type: obj.Type,
                                content: obj.Content,
                                color: obj.Id == 96 ? "black" : "white",
                                textColor: obj.Id == 96 ? "white" : "black",

                            });
                        });
                        callback(events);
                    }
                },
                "failure": function (data, statusText, jqXHR) {
                    $("#callback_1_layer").html(data.msg);
                }
            }
            , $("body"));
        }*@
    </script>
    <script type="text/javascript">
        function fn_DeleteItem(id) {
            $.sa.post(DELETECALENDERITEM,
                        JSON.stringify(id),
                                {
                                    "success": function (data) {
                                        //$('#calendar').fullCalendar('refetchEvents');
                                        $('#calendar').fullCalendar('removeEvents', id);
                                    },
                                    "failure": function (data, statusText, jqXHR) {
                                        $("#callback_1_layer").html(data.msg);
                                    }
                                }
                                , $("body"));
        }
    </script>
    <script type="text/javascript">
        function fn_SaveItem(param, myDialog) {
            $.sa.post(SAVECALENDERITEM,
                JSON.stringify(param),
                        {
                            "success": function (data) {
                                    myDialog.close();
                            },
                            "failure": function (data, statusText, jqXHR) {
                                $("#callback_1_layer").html(data.msg);
                            }
                        }
                        , $("body"));
       }
    </script>
}
