@{
    Layout = "_LayoutOfPop";
    ViewData["Title"] = "经销商";
}
@section HeadCss{
    <style>
        .jqgridbuttonwidth {
            width: 90%;
        }
    </style>
}
<div class="row">
    <div class="col-xs-7">
        <div class="input-group">
            <span class="input-group-addon">经销商名称</span>
            <input type="text" class="form-control" id="input_dis_id" maxlength="10" />
        </div>
    </div>
    <div class="col-xs-5">
        <div class="pull-right">
            <button class="btn btn-primary" id="btnSearch">
                <span class="fa fa-search gap-icon"></span>查询
            </button>
            <button class="btn btn-primary" id="btnComfirm">
                <span class="glyphicon glyphicon-ok gap-icon"></span>确认
            </button>
        </div>
    </div>
</div>
<div class="row">
    <div id="Grid" class="col-xs-12" style="margin-top:5px;">
        <table id="gridDis" class="ui-jqgrid-htable"></table>
        <div id="pager" class="page">
        </div>
    </div>
</div>
@section Scripts{
    <!-- 1. Load -->
    <script type="text/javascript">
        var  _grid,_areaId;
        $(document).ready(function () {
            _areaId = Request["pamAreaId"] == undefined ? null : Request["pamAreaId"];
            _grid = $("#gridDis");
            Initialize();
            InitData();
        });
    </script>

    <!-- 2. Init -->
    <script type="text/javascript">
        function Initialize() {
            fn_GridInit();
            $("#btnComfirm").on("click", function () {
                fn_Confirm();
            });
            $("#btnSearch").on("click", function () {
                fn_searchDis();
            });
        }
        function InitData() {
            fn_searchDis();
        }
    </script>
    <!-- 3. Validate -->
    <script type="text/javascript">
    </script>
    <!-- 4. Custom Function -->
    <script type="text/javascript">
        function fn_searchDis() {
            $.sa.get(GETDISTRIBUTORBYAREAID,
            { AreaId: _areaId, UserId: '@Context.Request.Cookies[SessionKeys.SESSION_USERID]', DisName:$.trim($("#input_dis_id").val()) },
            {
                "success": function (data) {
                    if (data != null && JSON.parse(data.body).length > 0) {
                        fn_SetGrid(JSON.parse(data.body));
                    } else {
                        $.sa.warning("没有查询到数据！", { maxWidth: '260px', minWidth: '200px'});
                        _grid.jqGrid("clearGridData");
                    }
                },
                "failure": function (data, statusText, jqXHR) {
                    $("#callback_1_layer").html(data.msg);
                    $.sa.warning(data.msg);
                }
            }, $("body"));

        }
        function fn_Confirm() {
            var ids = _grid.jqGrid('getGridParam', 'selarrrow');
            var disList = [];
            if (ids && ids.length == 0) {
                window.parent.popcallback([]);
            } else {
                for (var i = 0; i < ids.length; i++) {
                    var rowdata = _grid.jqGrid("getRowData", ids[i]);
                    disList.push(rowdata.DisId);
                }
                window.parent.popcallback(disList);
            }
        }
    </script>
    <!-- 5. Grid -->
    <script type="text/javascript">
        function fn_GridInit() {
            _grid.jqGrid({
                datatype: 'local',
                colModel: [
                    {
                        name: 'AreaName', label: '区域名', width: 140, align: 'left',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }
                    },
                    {
                        name: 'DisName', label: '经销商名', width: 255, align: 'left',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }
                    },
                    {
                        name: 'DisId', hidden: true
                    }
                ],
                width: $('#Grid').width(),
                minHeight: 0,
                height:240,
                maxHeight: 240,
                loadonce: true,
                shrinkToFit: true,
                forcefit: true,
                shrinkToFit: false,
                multiselect: true,
                rownumbers: true,
                rownumWidth: 30,
                rowNum: 10000,
                scroll: 1,
                loadui: true,
                pginput: false,       // 페이지 입력창을 표시하는 것에 대한 속성
                pgbuttons: false,     // 페이지 이동 버튼을 표시하는 것에 대한 속성
                pgtext: null,
                footerrow: false,
                cellsubmit: 'clientArray',
                pager: jQuery('#pager'),
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                gridComplete: function (id) {
                    var rowNum = parseInt($(this).getGridParam("records"), 50);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                    }

                    //fix the pager position
                    $('#pager_left').css('width', '25%');
                    $('#pager_right').css('width', '25%');

                    $("[aria-describedby='gridDis_rn']").addClass("readonlycell");
                   
                }
            });
        }

        function fn_SetGrid(mydata) {
            mydata = mydata || [];
            _grid.clearGridData()
            .setGridParam({
                data: mydata
            }).trigger('reloadGrid');
        }
    </script>
}