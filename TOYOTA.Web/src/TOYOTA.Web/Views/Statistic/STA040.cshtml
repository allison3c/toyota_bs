@{
    Layout = "_LayoutMenu";
    ViewData["Title"] = "经营数据报告";
}
@section HeadCss{
    <style>
        #txtSDate.datewidth, #txtEDate.datewidth {
            width: 48.5%;
        }

        table, table td {
            border: solid 1px #E4E4E4;
        }

            table td {
                width: 800px;
                padding-left: 5px;
            }

        #disTable td:nth-child(odd) {
            background-color: #EEEEEE;
            width: 300px;
        }

        #disTable tr {
            height: 30px;
        }

        .tableTitle {
            font-weight: bold;
            text-decoration: underline;
            font-size: 16px;
        }
    </style>
}
@section Scripts{
    <!-- 1. Load -->
    <script type="text/javascript">
        var zionServerLst = "";
        var _userType = "@Context.Request.Cookies[SessionKeys.SESSION_USERTYPE]";
        var _gridName, _grid, _gridName2, _grid2, _gridName3, _grid3;
        var _colors =  ["#95CEFF", "#90ED7D", "#F7A35C","#8085E9","#2B908F"];
        var _chartData;
        var _year="",_disId="";
        var _disName="";
        $(document).ready(function () {
            fn_setButton();
            fn_InitData();
            fn_Initialize();
            fn_InitGrid();

            $("#btnSearch").on("click", function () {
                _disName = $("#selServerLst option:selected").text();
                fn_GetDisInfo();
                fn_GetTableData();
            });

            $("#btnExportReport").on("click",function(){
                download();
            });

            $("#selAreaLst").change(function () {
                fn_SetServerData();
            });
            $("#selZionLst").change(function () {
                fn_SetAreaData();
            });

            $("#selYear").change(function () {
                fn_BindMonth();
            });
            $("#btnExcelUpload").on("click", function () {
                $("#files").val("");
                $('#files').click();
            });
            $("#files").change(function () {
                $("#fileText").val($(this).val());
                $("#upload").click();
            });
            $("#btnExcelDown").on("click", function () {
                //location.href = "~/Template/Score.xlsx";
                if('@Context.Request.Cookies[SessionKeys.SESSION_USERTYPE]'=='S'){
                    document.getElementById("a1").click();
                }else{
                    document.getElementById("a").click();

                }
            });
        });
    </script>
    <!--2.Init-->
    <script type="text/javascript">
        function fn_InitData() {
            fn_SetOrgData();
            var years = fn_GetYears();
            $("#selYear").html(JsonToCboList("Name", "Value", years, { 'SelectType': '' }));
            fn_BindMonth();

        }
        function fn_BindMonth() {
            var months = fn_GetMonth($("#selYear").val());
            $("#selCSS").html(JsonToCboList("Name", "Value", months, { 'SelectType': '' }));
            $("#selCCM").html(JsonToCboList("Name", "Value", months, { 'SelectType': '' }));
            $("#selBusiness").html(JsonToCboList("Name", "Value", months, { 'SelectType': '' }));
        }

        function fn_Initialize() {
            _gridName = 'gridBis';
            _grid = $('#' + _gridName);

            _gridName2 = 'gridQua';
            _grid2 = $('#' + _gridName2);

            _gridName3 = 'gridSto';
            _grid3 = $('#' + _gridName3);

            //Excel
            $("#upload").click(function (evt) {
                var fileUpload = $("#files").get(0);
                var files = fileUpload.files;
                var data = new FormData();
                for (var i = 0; i < files.length ; i++) {
                    data.append(files[i].name, files[i]);
                }
                $.ajax({
                    type: "POST",
                    url: "/Statistic/UploadAftersalesFiguresAjax",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (message) {
                        // alert(message);
                        if (JSON.parse(message).Success == true) {
                            fn_ExcelUpload(message);
                            //$.sa.warning("上传成功");
                        } else {
                            $.sa.warning("上传失败,请重试.");
                        }
                    },
                    error: function () {
                        $.sa.warning("上传失败,请重试.");
                    }
                });
            });
        }
        function fn_InitGrid() {
            fn_GridInit();
            fn_GridInit2();
            fn_GridInit3();
        }
        function fn_setButton(){
            if (_userType =="A" ||_userType=='S') {
                $("#btnExcelUpload").removeClass("hidden");
                $("#btnExcelDown").removeClass("hidden");
            }else{
                $("#btnExcelUpload").addClass("hidden");
                $("#btnExcelDown").addClass("hidden");
            }
        }
    </script>

    <!-- 3. Validate -->
    <script type="text/javascript">
    </script>
    <!--4. Custom Function-->
    <script type="text/javascript">

        function fn_SetOrgData() {
            $.sa.get(GETORGINFO, { UserId: '@Context.Request.Cookies[SessionKeys.SESSION_USERID]' },
              {
                  "success": function (data) {
                      zionServerLst = data.body;
                      $("#selZionLst").html(JsonToCboList("QName", "QId", JSON.parse(zionServerLst), { 'SelectType': '' }));
                      $("#selAreaLst").html(JsonToCboList("AName", "AId", null, { 'SelectType': '' }));
                      $("#selServerLst").html(JsonToCboList("SName", "SId", null, { 'SelectType': '' }));
                      fn_SetAreaData();
                  },
                  "failure": function (data, statusText, jqXHR) {
                  }
              });
        }

        function fn_SetAreaData() {
            var currentZion = $("#selZionLst").val();
            $("#selAreaLst").html(JsonToCboList("AName", "AId", null, { 'SelectType': '' }));
            $("#selServerLst").html(JsonToCboList("SName", "SId", null, { 'SelectType': '' }));
            $.each(JSON.parse(zionServerLst), function (i, v) {
                if (v.QId == currentZion) {
                    $("#selAreaLst").html(JsonToCboList("AName", "AId", v.AreaList, { 'SelectType': '' }));
                }
            });
            fn_SetServerData();
        }

        function fn_SetServerData() {
            var currentZion = $("#selZionLst").val();
            var currentArea = $("#selAreaLst").val();
            $("#selServerLst").html(JsonToCboList("SName", "SId", null, { 'SelectType': '' }));
            $.each(JSON.parse(zionServerLst), function (i, v) {
                if (v.QId == currentZion) {
                    $.each(v.AreaList, function (index, value) {
                        if (value.AId == currentArea) {
                            $("#selServerLst").html(JsonToCboList("SName", "SId", value.ServerList, { 'SelectType': '' }));
                        }
                    });
                }
            });
        }

        //年度
        function fn_GetYears() {
            var currentYear = '@ViewBag.CurrentYear';
            var yearArr = [];
            for (var i = 0; i < 5; i++) {
                var item = { 'Name': parseInt(currentYear) - i, 'Value': parseInt(currentYear) - i };
                yearArr.push(item);
            }
            return yearArr;
        }

        //月份
        function fn_GetMonth(year) {
            var currentYear = '@ViewBag.CurrentYear';
            var currentMonth = '@ViewBag.CurentMonth';
            var yearArr = [];
            if (year == currentYear) {
                for (var i = 1; i <= currentMonth; i++) {
                    var item = { 'Name': fn_Fixten(i), 'Value': fn_Fixten(i) };
                    yearArr.push(item);
                }
            } else {
                for (var i = 1; i <= 12; i++) {
                    var item = { 'Name': fn_Fixten(i), 'Value': fn_Fixten(i) };
                    yearArr.push(item);
                }
            }
            return yearArr;
        }

        function fn_Fixten(i) {
            if (i < 10) {
                return "0" + i;
            } else {
                return i;
            }
        }

        function fn_GetMonth2(year) {
            @*var currentYear = '@ViewBag.CurrentYear';
            var currentMonth = '@ViewBag.CurentMonth';*@
            //var mouths = ['一月', '二月', '三月', '四月', '五月', '六月',
            //                     '七月', '八月', '九月', '十月', '十一月', '十二月'];

            var mouths = ['1', '2', '3', '4', '5', '6',
                                '7', '8', '9', '10', '11', '12'];
            return mouths;
            //var mouthArr = [];
            //if (year == currentYear) {
            //    for (var i = 0; i < currentMonth; i++) {
            //        mouthArr.push(mouths[i]);
            //    }
            //} else {
            //    mouthArr = mouths;
            //}
            //return mouthArr;
        }

        function fn_GetTableData() {
            var mouth=$("#selBusiness").val();
            if ($("#selBusiness").val().substring(0,1)=="0") {
                mouth = $("#selBusiness").val().substring(1,2)
            }
            //$("#jqgh_gridBis_LTypeName").text( mouth+ "月");
            //$("#jqgh_gridQua_LTypeName").text($("#selCSS").val() + "月");
            //$("#jqgh_gridSto_LTypeName").text($("#selBusiness").val() + "月");

            $.sa.get(
                //"http://localhost:6505/toyota/api/v1/Statistic/GetAftersalesFigures",
            GETAFTERSALESFIGURES,
           {
               DisId: $("#selServerLst").val()
               , YearMonthCSS: $("#selYear").val() + $("#selCSS").val()
               , YearMonthCCM: $("#selYear").val() + $("#selCCM").val()
               , YearMonthB: $("#selYear").val() + $("#selBusiness").val()
           },
           {
               "success": function (data) {
                   var result = JSON.parse(data.body);
                   fn_SetGrid(result.BusinessList);
                   fn_SetGrid2(result.QualityList);
                   fn_SetGrid3(result.PartsStockList);
                   $("#spanCSSYearTarget").text(result.CSSYearTargetList.length == 1 ? result.CSSYearTargetList[0].CSSYearTarget : "");
               },
               "failure": function (data, statusText, jqXHR) {
               }
           },$("body"));

            // if (_year !=$("#selYear").val()||_disId!=$("#selServerLst").val()) {
            if (true) {
                $.sa.get(
          //"http://localhost:6505/toyota/api/v1/Statistic/GetAftersalesFiguresForHighCharts",
          GETAFTERSALESFIGURESFORHIGHCHARTS,
         {
             DisId: $("#selServerLst").val()
            , Year: $("#selYear").val()
         },
         {
             "success": function (data) {
                 var result = JSON.parse(data.body);
                 _chartData=  result;
                 var datax = fn_GetMonth2($("#selYear").val());
                 fn_GetThroughputs(result, datax);
                 fn_GetParts(result, datax);
                 fn_GetAfterSales(result, datax);
                 fn_GetPartsStock(result, datax);
                 fn_CSS(result, datax);
                 fn_FFV(result, datax);
                 fn_IKB(result, datax);
                 $(".highcharts-root").css("font-family",'微软雅黑');

             },
             "failure": function (data, statusText, jqXHR) {
             }
         });
            }


            _year =$("#selYear").val();
            _disId = $("#selServerLst").val();

        }
    </script>

    <script type="text/javascript">
        //进厂台次
        function fn_GetThroughputs(result, datax) {
            var datay = [];
            for (var i = 0; i < result.Throughputs.length; i++) {
                var dataI = result.Throughputs[i];
                if (dataI.Stype == "01"||dataI.Stype == "02"||dataI.Stype == "07") {
                    var item2 = {
                        name: dataI.STypeName,
                        type: 'column',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ''
                        }
                    }
                    datay.push(item2);
                }else if (dataI.Stype == "03") {
                    var item1 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ' %'
                        },
                        yAxis: 1
                    }
                    datay.push(item1);
                }else if (dataI.Stype == "08") {
                    var item3 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],

                    }
                    datay.push(item3);
                }else if (dataI.Stype == "09") {
                    var item4 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],

                    }
                    datay.push(item4);
                }
            }

            $('#container1').highcharts({
                chart: {
                    zoomType: 'xy'
                },
                title: {
                    text: '进厂台次'
                },
                credits: {
                    enabled: false
                },
                colors: _colors,
                //colors:["#95CEFF", "#90ED7D", "#F7A35C","#8085E9","#2B908F"],
                subtitle: {
                    text: '单位：台次'
                },
                xAxis: [{
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                }],
                yAxis: [{ // Primary yAxis
                    labels: {
                        format: '{value}',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    },
                    title: {
                        text: '进厂台次',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    }
                }, { // Secondary yAxis
                    title: {
                        text: '完成率',
                        style: {
                            color: Highcharts.getOptions().colors[0]
                        }
                    },
                    labels: {
                        format: '{value}%',
                        style: {
                            color: Highcharts.getOptions().colors[0]
                        }
                    },min:0,
                    opposite: true
                }],
                tooltip: {
                    shared: true
                },
                legend: {
                    //layout: 'vertical',
                    //align: 'left',
                    //x: 120,
                    //verticalAlign: 'top',
                    //y: 100,
                    //floating: true,
                    //backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
                },
                series: datay
            });
        }
        //原厂备件采购
        function fn_GetParts(result, datax) {

            var datay = [];
            for (var i = 0; i < result.Parts.length; i++) {
                var dataI = result.Parts[i];
                if (dataI.Stype == "01"||dataI.Stype == "02"||dataI.Stype == "07") {
                    var item2 = {
                        name: dataI.STypeName,
                        type: 'column',

                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ''
                        }
                    }
                    datay.push(item2);
                }else if(dataI.Stype == "08"){
                    var item3 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],

                    }
                    datay.push(item3);
                }else if (dataI.Stype == "09") {
                    var item4 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],

                    }
                    datay.push(item4);
                }
            }
            for (var i = 0; i < result.Parts.length; i++) {
                var dataI = result.Parts[i];
                if (dataI.Stype == "03") {
                    var item1 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ' %'
                        }, yAxis: 1
                    }
                    datay.push(item1);
                }
            }

            {
                $('#container2').highcharts({
                    chart: {
                        zoomType: 'xy'
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: '原厂备件采购'
                    },
                    colors: _colors,
                    // colors:["#95CEFF", "#90ED7D", "#F7A35C","#8085E9","#2B908F"],
                    subtitle: {
                        text: '单位：千元'
                    },
                    xAxis: [{
                        categories: datax,
                        crosshair: true,
                        title: {
                            text: '月份'
                        }
                    }],
                    yAxis: [{ // Primary yAxis
                        labels: {
                            format: '{value}',
                            style: {
                                color: Highcharts.getOptions().colors[1]
                            }
                        },
                        title: {
                            text: '原厂备件采购',
                            style: {
                                color: Highcharts.getOptions().colors[1]
                            }
                        }
                    }, { // Secondary yAxis
                        title: {
                            text: '完成率',
                            style: {
                                color: Highcharts.getOptions().colors[0]
                            }
                        },
                        labels: {
                            format: '{value}%',
                            style: {
                                color: Highcharts.getOptions().colors[0]
                            }
                        },min:0,
                        opposite: true
                    }],
                    tooltip: {
                        shared: true
                    },
                    legend: {
                        //layout: 'vertical',
                        //align: 'left',
                        //x: 120,
                        //verticalAlign: 'top',
                        //y: 100,
                        //floating: true,
                        //backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
                    },
                    series: datay
                });
            }
        }

        //售后产值
        function fn_GetAfterSales(result, datax) {
            var datay = [];
            for (var i = 0; i < result.AfterSales.length; i++) {
                var dataI = result.AfterSales[i];
                if (dataI.Stype == "03"||dataI.Stype == "04") {
                    var item1 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]

                    }
                    datay.push(item1);
                }else if (dataI.Stype == "05") {
                    var item5= {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]
                    }
                    datay.push(item5);
                }else if (dataI.Stype == "06") {
                    var item6= {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]
                    }
                    datay.push(item6);
                }
                else if(dataI.Stype == "01"||dataI.Stype == "02"){
                    var item2 = {
                        name: dataI.STypeName,
                        type: 'column',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]
                    }
                    datay.push(item2);
                }
            }

            $('#container3').highcharts({
                chart: {
                    zoomType: 'xy'
                },
                title: {
                    text: '售后产值'
                },  credits: {
                    enabled: false
                },
                subtitle: {
                    text: '单位：千元'
                },
                colors: _colors,
                //colors:["#95CEFF", "#90ED7D", "#F7A35C","#8085E9","#2B908F"],
                xAxis: {
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                },
                yAxis: [{
                    min: 0,
                    title: {
                        text: ''
                    },labels: {
                        format: '{value}'
                    }
                }, { // Primary yAxis
                    labels: {
                        format: '{value}',
                        style: {
                            color: Highcharts.getOptions().colors[3]
                        }
                    },
                    title: {
                        text: '',
                        style: {
                            color: Highcharts.getOptions().colors[3]
                        }
                    },min:0,
                    opposite: true
                }],
                legend: {
                },
                tooltip: {
                    //formatter: function () {
                    //    if (this.point.stackTotal != undefined) {
                    //        return '<b>' + this.x + '</b><br/>' +
                    //        this.series.name + ': ' + this.y + '<br/>' +
                    //        '总计月报数据: ' + this.point.stackTotal;
                    //    } else {
                    //        return '<b>' + this.x + '</b><br/>' +
                    //        this.series.name + ': ' + this.y + '<br/>';
                    //    }
                    //}
                    shared: true
                },
                plotOptions: {
                    column: {
                        stacking: 'normal'
                        //,dataLabels: {
                        //    enabled: true,
                        //    color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                        //    style: {
                        //        textShadow: '0 0 3px black'
                        //    }
                        //}
                    }
                },
                series: datay
            });
        }

        //备件库存
        function fn_GetPartsStock(result, datax){

            var datay = [];
            for (var i = 0; i < result.PartsStock.length; i++) {
                var dataI = result.PartsStock[i];
                if (dataI.Stype =="01"||dataI.Stype =="03"||dataI.Stype =="05") {
                    var item2 = {
                        name: dataI.STypeName,
                        type: 'column',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ''
                        }
                    }
                    datay.push(item2);
                }else if (dataI.Stype =="06") {
                    var item3 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]
                    }
                    datay.push(item3);
                }else if (dataI.Stype =="07") {
                    var item7 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec]
                    }
                    datay.push(item7);
                }
            }
            for (var i = 0; i < result.PartsStock.length; i++) {
                var dataI = result.PartsStock[i];
                if (dataI.Stype == "02"||dataI.Stype == "04") {
                    var item1 = {
                        name: dataI.STypeName,
                        type: 'spline',
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        tooltip: {
                            valueSuffix: ' '
                        },
                        yAxis: 1
                    }
                    datay.push(item1);
                }
            }

            $('#container4').highcharts({
                chart: {
                    zoomType: 'xy'
                },
                title: {
                    text: '备件库存'
                },
                credits: {
                    enabled: false
                },
                colors: _colors,
                //colors:["#95CEFF", "#90ED7D","#8085E9","#2B908F"],
                subtitle: {
                    text: '单位：千元'
                },
                xAxis: [{
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                }],
                yAxis: [{ // Primary yAxis
                    labels: {
                        format: '{value}',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    },
                    title: {
                        text: '金额',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    }
                }, { // Secondary yAxis
                    title: {
                        text: '周转率',
                        style: {
                            color: Highcharts.getOptions().colors[0]
                        }
                    },
                    labels: {
                        format: '{value}',
                        style: {
                            color: Highcharts.getOptions().colors[0]
                        }
                    },min:0,
                    opposite: true
                }],
                tooltip: {
                    shared: true
                },
                legend: {
                    //layout: 'vertical',
                    //align: 'left',
                    //x: 120,
                    //verticalAlign: 'top',
                    //y: 100,
                    //floating: true,
                    //backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'
                },
                series: datay
            });
        }

        //CSS 总分
        function fn_CSS(result, datax){

            var datay = [];
            for (var i = 0; i < result.CSS.length; i++) {
                var dataI = result.CSS[i];
                if (dataI.Stype =="01"||dataI.Stype =="02") {
                    var item1 = {
                        name: dataI.STypeName,
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                    }
                    datay.push(item1);
                }else if (dataI.Stype =="03") {
                    var item2 = {
                        name: dataI.STypeName,
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline'
                    }
                    datay.push(item2);
                }else if (dataI.Stype =="04") {
                    var item4 = {
                        name: dataI.STypeName,
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline'
                    }
                    datay.push(item4);
                }


            }

            $('#container5').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'CEM 总分'
                },  credits: {
                    enabled: false
                },
                colors: _colors,
                //colors:["#95CEFF", "#90ED7D","#8085E9","#2B908F", "#F7A35C"],
                subtitle: {
                    text: ''
                },
                xAxis: {
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                },
                yAxis: {
                    min: 0,
                    max:100,
                    title: {
                        text: ''
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series:datay
            });
        }

        //FFV 总分
        function fn_FFV(result, datax){
            var datay = [];
            for (var i = 0; i < result.FFV.length; i++) {
                var dataI = result.FFV[i];
                if (dataI.Stype =="01"||dataI.Stype =="02") {
                    var item1 = {
                        name: dataI.STypeName,
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                    }
                    datay.push(item1);
                }else if (dataI.Stype =="03") {
                    var item1 = {
                        name: dataI.STypeName,
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline'
                    }
                    datay.push(item1);
                }
                else if (dataI.Stype =="04") {
                    var item4 = {
                        name: dataI.STypeName,
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline'
                    }
                    datay.push(item4);
                }


            }

            $('#container6').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'FFV'
                },  credits: {
                    enabled: false
                },
                colors: _colors,
                //colors:["#95CEFF", "#90ED7D","#8085E9","#2B908F", "#F7A35C"],
                subtitle: {
                    text: ''
                },
                xAxis: {
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                },
                yAxis: {
                    min: 0,
                    max:100,
                    title: {
                        text: ''
                    }, labels: {
                        format: '{value}%',
                        style: {
                            color: Highcharts.getOptions().colors[1]
                        }
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f}% </b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series:datay
            });
        }

        //IKB
        function fn_IKB(result, datax){
            var datay = [];
            for (var i = 0; i < result.IKB.length; i++) {
                var dataI = result.IKB[i];
                if (dataI.Stype =="01") {
                    var item1 = {
                        name: dataI.STypeName,
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                    }
                    datay.push(item1);
                }else if (dataI.Stype =="02") {
                    var item2 = {
                        name: dataI.STypeName,
                        color:"#8085E9",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline',
                    }
                    datay.push(item2);
                }
                else if (dataI.Stype =="03") {
                    var item3= {
                        name: dataI.STypeName,
                        color:"#2B908F",
                        data: [dataI.Jan, dataI.Feb, dataI.Mar, dataI.Apr, dataI.May, dataI.Jun, dataI.July, dataI.Aug, dataI.Sep, dataI.Oct, dataI.Nov, dataI.Dec],
                        type: 'spline',
                    }
                    datay.push(item3);
                }

            }

            $('#container7').highcharts({
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'IKB'
                },  credits: {
                    enabled: false
                },
                colors: _colors,
                //colors:["#95CEFF","#8085E9","#2B908F", "#F7A35C", "#90ED7D"],
                subtitle: {
                    text: ''
                },
                xAxis: {
                    categories: datax,
                    crosshair: true,
                    title: {
                        text: '月份'
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: ''
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series:datay
            });
        }


    </script>

    <!--4.Grid-->
    <script type="text/javascript">
        function fn_GridInit() {
            _grid.jqGrid({
                datatype: 'local',
                colModel: [
                        {
                            name: 'LTypeName', label: "指标名称", width: 40, align: 'left'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        },
                        {
                            name: 'Actual', label: "实际", width: 40, align: 'right'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                            //, formatter: 'integer'
                        },
                        {
                            name: 'Target', label: "目标", width: 40, align: 'right'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                            //,formatter: 'integer'
                        },
                        {
                            name: 'Rate', label: "完成率", width: 40, align: 'right'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                            //, formatter: "currency", formatoptions: { suffix: "%", decimalPlaces: 2 }
                        }

                ],
                width: $('#Grid1').width(),
                height: 'auto',
                rownumbers: false,
                rownumWidth: 30,
                rowNum: 50,
                rowList: [50, 60, 70],
                footerrow: false,
                cellsubmit: 'clientArray',
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                gridComplete: function (id) {
                    var rowNum = parseInt($(this).getGridParam("records"), 10);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                    }
                    $('#pager1_left').css('width', '25%');
                    $('#pager1_right').css('width', '25%');
                    $("[aria-describedby='gridStandardPic_rn']").addClass("readonlycell");
                },
                afterInsertRow: function (id) {
                }
            });
        }

        function fn_SetGrid(mydata) {
            mydata = mydata || [];
            _grid.clearGridData()
                .setGridParam({
                    data: mydata
                }).trigger('reloadGrid');
            localdata = mydata;
        }

        function fn_GridInit2() {
            _grid2.jqGrid({
                datatype: 'local',
                colModel: [
                        {
                            name: 'LTypeName', label: "指标名称", width: 40, align: 'left'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        },
                        {
                            name: 'ScoreAndRank', label: "成绩/排名", width: 40, align: 'center'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        },
                        {
                            name: 'AverageAndTotal', label: "全国平均值/经销商总数", width: 40, align: 'center'
                             , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                 return 'class="readonlycell"';
                             }
                        }

                ],
                width: $('#Grid2').width(),
                height: 'auto',
                rownumbers: false,
                rownumWidth: 30,
                rowNum: 50,
                rowList: [50, 60, 70],
                footerrow: false,
                cellsubmit: 'clientArray',
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                gridComplete: function (id) {
                    var rowNum = parseInt($(this).getGridParam("records"), 10);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                    }
                    $('#pager2_left').css('width', '25%');
                    $('#pager2_right').css('width', '25%');
                    $("[aria-describedby='gridStandardPic_rn']").addClass("readonlycell");
                },
                afterInsertRow: function (id) {
                }
            });
        }

        function fn_SetGrid2(mydata) {
            mydata = mydata || [];
            _grid2.clearGridData()
                .setGridParam({
                    data: mydata
                }).trigger('reloadGrid');
            localdata = mydata;
        }

        function fn_GridInit3() {
            _grid3.jqGrid({
                datatype: 'local',
                colModel: [
                        {
                            name: 'LTypeName', label: "指标名称", width: 40, align: 'left'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        },
                        {
                            name: 'Target', label: "季度目标", width: 40, align: 'right'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        },
                        {
                            name: 'Actual', label: "实际成绩", width: 40, align: 'right'
                            , cellattr: function (rowId, val, rawObject, cm, rdata) {
                                return 'class="readonlycell"';
                            }
                        }

                ],
                width: $('#Grid3').width(),
                height: 'auto',
                rownumbers: false,
                rownumWidth: 30,
                rowNum: 50,
                rowList: [50, 60, 70],
                footerrow: false,
                cellsubmit: 'clientArray',
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                gridComplete: function (id) {
                    var rowNum = parseInt($(this).getGridParam("records"), 10);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                    }
                    $('#pager3_left').css('width', '25%');
                    $('#pager3_right').css('width', '25%');
                    $("[aria-describedby='gridStandardPic_rn']").addClass("readonlycell");
                },
                afterInsertRow: function (id) {
                }
            });
        }

        function fn_SetGrid3(mydata) {
            mydata = mydata || [];
            _grid3.clearGridData()
                .setGridParam({
                    data: mydata
                }).trigger('reloadGrid');
            localdata = mydata;
        }

    </script>

    <script type="text/javascript">
        // 获取经销商信息并绑定到Table中
        function fn_GetDisInfo() {
            //$.sa.get("http://toyotadevapi.elandcloud.com/toyota/api/v1/Statistic/GetInfoByDisId",
            $.sa.get(GETINFOBYDISID,
                { DisId: $("#selServerLst").val() },
                {
                    "success": function (data) {
                        if (JSON.parse(data.body).length > 0) {
                            var info = JSON.parse(data.body)[0];
                            $("#disTable").find("tr").eq(0).find("td").eq(1).empty().text(info.AUserName);
                            $("#disTable").find("tr").eq(0).find("td").eq(3).empty().text(info.NowVisitDate);
                            $("#disTable").find("tr").eq(1).find("td").eq(1).empty().text(info.DUserName);
                            $("#disTable").find("tr").eq(1).find("td").eq(3).empty().text(info.LastDate);
                        } else {

                            $("#disTable").find("tr").eq(0).find("td").eq(1).empty();
                            $("#disTable").find("tr").eq(0).find("td").eq(3).empty();
                            $("#disTable").find("tr").eq(1).find("td").eq(1).empty();
                            $("#disTable").find("tr").eq(1).find("td").eq(3).empty();
                        }

                    },
                    "failure": function (data, statusText, jqXHR) {
                    }
                });
        }
        //Excel上传

        function fn_ExcelUpload(obj) {
            var aftersalesdata=JSON.parse(JSON.parse(obj).Result).AfterSalesData;
            aftersalesdata.splice(0,1);
            var item = {InUserId:@Context.Request.Cookies[SessionKeys.SESSION_USERID],AfterSalesData:aftersalesdata};
            //$.sa.post('http://localhost:6505/toyota/api/v1/Statistic/InsertAfterSalesDataByExcel',
            $.sa.post(INSERTAFTERSALESDATABYEXCEL,
                          JSON.stringify(item),
                          {
                              "success": function (data) {
                                  if (data != null && data.msg == "") {
                                      $.sa.warning("上传成功！");
                                      //fn_ClosePlan();
                                  } else {
                                      $.sa.warning("上传失败！");
                                      //fn_SetGrid("");
                                  }
                              },
                              "failure": function (data, statusText, jqXHR) {
                                  //fn_SetGrid("");
                                  $.sa.warning(data.msg);
                              }
                          }, $("body"));
        }
    </script>


    <script src="../js/excel/FileSaver.js"></script>
    <script src="../js/excel/jszip.min.js"></script>
    <script src="../js/excel/xlsx.js"></script>
    <script type="text/javascript">
        function download() {
            if (_chartData==undefined) {
                $.sa.warning("请先查询数据,再进行报告下载");
                return ;
            }
            var file = new xlsx.File();
            var sheet = file.addSheet('Report');
            sheet.setShowGridLine(false);
            sheet.setColWidth(0,13,4);

            var tr = sheet.addRow();
            tr.setHeightCM(1.2);
            for (var p = 0; p < 14; p++){
                var tc = tr.addCell();
                if (p==0) {
                    tc.value = "Dealer Visit Report - Aftersales 经销商拜访记录 - 售后经销商售后业务概览";
                    tc.hMerge =13;
                    tc.style.align.v = 'center';
                    tc.style.align.h = 'center';
                    fill(tc, 4)
                    font(tc,12,"Microsoft YaHei",true);
                }
            }

            var header1 = sheet.addRow();
            var hrow1 = ['大区', $("#selZionLst option:selected").text(), '区域', $("#selAreaLst option:selected").text(), '经销商', $("#selServerLst option:selected").text(),'',''];

            for (var y = 0; y < hrow1.length; y++) {
                var hc = header1.addCell();
                hc.value = hrow1[y];
                hc.style.align.v = 'center';
                hc.style.align.h = 'center';
                hc.style.font.color = '#555555';
                border(hc, 1, 1, 1, 1);
                font(hc);
                if (y==5) {
                    hc.hMerge =2;
                }
                if (y == 0 || y == 2 || y == 4)
                    fill(hc, 4)
                //else
                    //fill(hc, 3);
            }
            var header2 = sheet.addRow();
            var hrow2 = ['年度', $("#selYear option:selected").text(), 'CEM月份', $("#selCSS option:selected").text(), 'CCM月份', $("#selCCM option:selected").text(), '业务月份', $("#selBusiness option:selected").text()];

            for (var i = 0; i < hrow2.length; i++) {
                var hc = header2.addCell();
                hc.value = hrow2[i];
                hc.style.align.v = 'center';
                hc.style.align.h = 'center';
                hc.style.font.color = '#555555';
                border(hc, 1, 1, 1, 1);
                font(hc);
                if (i == 0 || i == 2 || i == 4||i==6){
                    fill(hc, 4)
                }
                else{
                    //fill(hc, 3);
                }
            }

            fn_drawTable(sheet);

            fn_JqgridToTable(sheet,"Grid1","▶业务表现");
            fn_JqgridToTable(sheet,"Grid2","▶质量表现  客户满意度年度目标:"+$("#spanCSSYearTarget").text());
            fn_JqgridToTable(sheet,"Grid3","▶备件库存情况");

            fn_drawTableForChart(sheet,_chartData.Throughputs,"进厂台次 （单位：台次）","业务数据");
            fn_drawTableForChart(sheet,_chartData.Parts,"原厂备件采购 （单位：千元）");
            fn_drawTableForChart(sheet,_chartData.AfterSales,"售后产值 （单位：千元）");
            fn_drawTableForChart(sheet,_chartData.PartsStock,"备件库存 （单位：千元）");
            fn_drawTableForChart(sheet,_chartData.CSS,"CEM总分","客户满意度");
            fn_drawTableForChart(sheet,_chartData.FFV,"FFV");
            fn_drawTableForChart(sheet,_chartData.IKB,"IKB");
            fn_Sign(sheet);



            file
              .saveAs('blob')
              .then(function (content) {
                  saveAs(content, _disName+"_"+"经营数据报告.xlsx");
              });
        }
        function border(cell, top, left, bottom, right) {
            //var light = 'ffded9d4';
            var light = 'ffffffff';
            var dark = 'ff7e6a54';
            cell.style.border.top = 'thin';
            cell.style.border.topColor = top ? dark : light;
            cell.style.border.left = 'thin';
            cell.style.border.leftColor = left ? dark : light;
            cell.style.border.bottom = 'thin';
            cell.style.border.bottomColor = bottom ? dark : light;
            cell.style.border.right = 'thin';
            cell.style.border.rightColor = right ? dark : light;
        }
        function fill(cell, type) {
            type = type || 0;
            var colors = ['ffffffff', 'ffa2917d', 'ffe4e2de', 'fffff8df', '74a3d2'];
            // 1: header, 2: first col, 3: second col, 4: gray, 0: white
            cell.style.fill.patternType = 'solid';
            cell.style.fill.fgColor = colors[type];
            cell.style.fill.bgColor = 'ffffffff';
        }
        function font(cell,fontsize,fontfamily,bold,underline){
            fontsize = fontsize||6;
            fontfamily = fontfamily||"Microsoft YaHei";
            bold=bold||false;
            underline=underline||false;
            cell.style.font.size = fontsize;
            cell.style.font.name = fontfamily;
            cell.style.font.bold=bold;
            cell.style.font.underline=underline;
        }
        function fn_JqgridToTable(sheet,id,title){
            sheet.addRow().setHeightCM(0.4);

            var th1 =$("#"+id).find("thead tr").eq(0).find("th");
            var title1=  sheet.addRow();
            for (var m = 0; m< th1.length*2; m++) {
                var cell = title1.addCell();
                if (m==0) {
                    cell.value =title;
                    cell.style.align.v = 'center';
                    cell.hMerge =th1.length*2;
                    cell.style.align.h = 'left';
                    font(cell,12,"Microsoft YaHei",true);
                }
            }
            var thead1=  sheet.addRow();
            thead1.isCustom = false;
            for (var k = 0; k < th1.length*2; k++) {
                var cell = thead1.addCell();
                cell.style.align.wrapText = true;
                border(cell, 1, 1, 1, 1);
                if (k%2==0) {
                    cell.value =$(th1[k/2]).text();
                    cell.style.align.v = 'center';
                    cell.hMerge =1;
                    cell.style.align.h = 'center';
                    fill(cell,4);
                    font(cell);
                }
            }

            for (var j = 1; j< $("#"+id).find("tbody tr").length; j++) {
                var table1=  sheet.addRow();
                table1.isCustom = false;
                var tr1 =$("#"+id).find("tbody tr").eq(j).find("td");
                for (var i = 0; i < tr1.length*2; i++) {
                    var cell = table1.addCell();
                    cell.style.align.wrapText = true;
                    border(cell, 1, 1, 1, 1);
                    if (i%2==0) {
                        cell.value =$(tr1[i/2]).text();
                        cell.style.align.v = 'center';
                        cell.hMerge =1;
                        if (i==0) {
                            cell.style.align.h = 'left';
                            font(cell);
                        }else{
                            cell.style.align.h = 'right';
                            font(cell);
                        }
                    }
                }
            }
        }

        function fn_drawTable(sheet){
            sheet.addRow().setHeightCM(0.4);
            for (var j = 0; j< $("#disTable").find("tr").length; j++) {
                var table1=  sheet.addRow();
                var tr1 = $("#disTable").find("tr").eq(j).find("td");
                for (var i = 0; i < tr1.length*2; i++) {
                    var cell = table1.addCell();
                    border(cell, 1, 1, 1, 1);
                    if (i%2==0) {
                        cell.value =$(tr1[i/2]).text();
                        cell.style.align.v = 'center';
                        cell.hMerge =1;
                        if (i%4==0) {
                            fill(cell,4);
                            cell.style.align.h = 'left';
                            font(cell);
                        }else{
                            cell.style.align.h = 'center';
                            font(cell);
                        }
                    }
                }
            }
        }

        function fn_drawTableForChart(sheet,dataI,title1,title2){
            sheet.addRow().setHeightCM(0.4);

            if (title2) {
                var row=  sheet.addRow();
                for (var j = 0; j < 14; j++) {
                    var cell = row.addCell();
                    if (j==0) {
                        cell.value =title2
                        cell.hMerge=13;
                        font(cell,12,"Microsoft YaHei",true);
                    }

                }
            }
            if (title1) {
                var row=  sheet.addRow();
                for (var j = 0; j < 14; j++) {
                    var cell = row.addCell();
                    if (j==0) {
                        cell.value =title1
                        cell.hMerge=13;
                        font(cell,11,"Microsoft YaHei",true);

                    }
                }
            }
            var mouths = ['','','一月', '二月', '三月', '四月', '五月', '六月',
                           '七月', '八月', '九月', '十月', '十一月', '十二月'];
            var row=  sheet.addRow();
            for (var j = 0; j < 14; j++) {
                var cell = row.addCell();
                border(cell, 1, 1, 1, 1);
                font(cell);
                if (j>0) {
                    cell.value =mouths[j];
                    cell.style.align.v = 'center';
                    cell.style.align.h = 'center';
                    fill(cell,4);
                }else{
                    cell.hMerge=1;
                    fill(cell,4);
                }

            }
            for (var i = 0; i < dataI.length; i++) {
                var row=  sheet.addRow();


                var cell0 = row.addCell();
                border(cell0, 1, 1, 1, 1);
                cell0.value =dataI[i].STypeName;
                font(cell0);

                var cell = row.addCell();
                border(cell, 1, 1, 1, 1);
                fill(cell,4);

                cell0.hMerge =1;

                var cell1 = row.addCell();
                border(cell1, 1, 1, 1, 1);
                cell1.value =dataI[i].Jan;
                font(cell1);

                var cell2 = row.addCell();
                border(cell2, 1, 1, 1, 1);
                cell2.value =dataI[i].Feb;
                font(cell2);

                var cell3 = row.addCell();
                border(cell3, 1, 1, 1, 1);
                cell3.value =dataI[i].Mar;
                font(cell3);

                var cell4 = row.addCell();
                border(cell4, 1, 1, 1, 1);
                cell4.value =dataI[i].Apr;
                font(cell4);

                var cell5 = row.addCell();
                border(cell5, 1, 1, 1, 1);
                cell5.value =dataI[i].May;
                font(cell5);

                var cell6 = row.addCell();
                border(cell6, 1, 1, 1, 1);
                cell6.value =dataI[i].Jun;
                font(cell6);

                var cell7 = row.addCell();
                border(cell7, 1, 1, 1, 1);
                cell7.value =dataI[i].July;
                font(cell7);

                var cell8 = row.addCell();
                border(cell8, 1, 1, 1, 1);
                cell8.value =dataI[i].Aug;
                font(cell8);

                var cell9 = row.addCell();
                border(cell9, 1, 1, 1, 1);
                cell9.value =dataI[i].Sep;
                font(cell9);

                var cell10 = row.addCell();
                border(cell10, 1, 1, 1, 1);
                cell10.value =dataI[i].Oct;
                font(cell10);

                var cell11 = row.addCell();
                border(cell11, 1, 1, 1, 1);
                cell11.value =dataI[i].Nov;
                font(cell11);

                var cell12 = row.addCell();
                border(cell12, 1, 1, 1, 1);
                cell12.value =dataI[i].Dec;
                font(cell12);

            }
        }

        function fn_Sign(sheet){
            sheet.addRow().setHeightCM(0.4);
            var tr = sheet.addRow();
            for (var p = 0; p < 14; p++){
                var tc = tr.addCell();
                if (p==0) {
                    tc.value = "经销商签字:                            ";
                    tc.hMerge =12;
                    tc.style.align.v = 'center';
                    tc.style.align.h = 'right';
                    font(tc,12,"Microsoft YaHei",true);
                }else{
                    border(tc, 0, 0, 1, 0);
                }
            }
        }
    </script>
}


<div class="row gap-top">
    <div class="col-md-12">
        <span class="fa fa-flag fa-lg gap-icon"></span><span class="page-mtitle"></span>报告查看<span>&nbsp;>&nbsp;</span>
        <span class="page-title">经营数据报告</span>
        <div class="pull-right">
            <button class="btn btn-primary" id="btnSearch">
                <span class="fa fa-search gap-icon"></span>查询
            </button>
            <button id="btnExcelUpload" class="btn btn-primary hidden">
                <span class="fa fa-file-excel-o gap-icon"></span>Excel上传
            </button>
            <button id="btnExcelDown" class="btn btn-primary hidden">
                <span class="fa fa-file-excel-o gap-icon"></span>Excel模板下载
            </button>
            <a href="~/Template/经营数据报告模板.xlsx" class="aline" id="a" style="display:none">Excel模板下载</a>
            <a href="~/Template/经营数据报告模板_经销商.xlsx" class="aline" id="a1" style="display:none">Excel模板下载</a>

            <button id="btnExportReport" class="btn btn-primary">
                <span class="fa fa-file-excel-o gap-icon"></span>报告下载
            </button>
        </div>
    </div>
</div>
<form method="post" enctype="multipart/form-data">
    <div class="form-group">
        <div class="col-md-0" id="divfile">
            <input id="files" name="files" type="file" style="display:none" />
            <input id="fileText" type="text" class="form-control" style="display:none" />
        </div>
        <div class="col-md-0">
            <input type="button" id="upload" class="btn btn-primary" value="Excel上传" style="display:none;" />
        </div>
    </div>
</form>
<div class="row gap-top">
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">大区</span>
            <select class="form-control orgWidth" id="selZionLst"></select>
        </div>
    </div>
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">区域</span>
            <select class="form-control orgWidth" id="selAreaLst"></select>
        </div>
    </div>
    <div class="col-md-6 col-sm-6">
        <div class="input-group">
            <span class="input-group-addon title-sm">经销商</span>
            <select class="form-control orgWidth" id="selServerLst"></select>
        </div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">年度</span>
            <select class="form-control orgWidth" id="selYear"></select>
        </div>
    </div>
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">CEM月份</span>
            <select class="form-control orgWidth" id="selCSS"></select>
        </div>
    </div>
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">CCM月份</span>
            <select class="form-control orgWidth" id="selCCM"></select>
        </div>
    </div>
    <div class="col-md-3 col-sm-3">
        <div class="input-group">
            <span class="input-group-addon title-sm">业务月份</span>
            <select class="form-control orgWidth" id="selBusiness"></select>
        </div>
    </div>
</div>

<div class="row gap-top">
</div>
<div class="row gap-top">
    <div class="col-md-9 col-sm-9">
        <table id="disTable">
            <tr><td>VGIC代表</td><td></td><td>拜访日期</td><td></td></tr>
            <tr><td>经销商代表</td><td></td><td>上一次拜访日期</td><td></td></tr>
        </table>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-9"><span class="fa fa-caret-right " style="font-size:18px;"></span><span class="tableTitle">业务表现</span></div>
    <div id="Grid1" class="col-md-9">
        <table id="gridBis" class="ui-jqgrid-htable"></table>
        <div id="pager1" class="page">
        </div>
    </div>

</div>

<div class="row gap-top">
    <div class="col-md-9"><span class="fa fa-caret-right" style="font-size:18px;"></span><span class="tableTitle">质量表现</span><span class="pull-right">客户满意度年度目标:<span id="spanCSSYearTarget"></span></span></div>
    <div id="Grid2" class="col-md-9">
        <table id="gridQua" class="ui-jqgrid-htable"></table>
        <div id="pager2" class="page">
        </div>

    </div>


</div>

<div class="row gap-top">
    <div class="col-md-9"><span class="fa fa-caret-right" style="font-size:18px;"></span><span class="tableTitle">备件库存情况</span></div>
    <div id="Grid3" class="col-md-9">
        <table id="gridSto" class="ui-jqgrid-htable"></table>
        <div id="pager3" class="page">
        </div>

    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div style="margin-top:30px;"><span class="tableTitle">业务数据</span><span> 备注：所有金额均不含税。</span></div>
        <div id="container1" style="min-width:400px;height:400px"></div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div id="container2" style="min-width:400px;height:400px"></div>
    </div>
</div>


<div class="row gap-top">
    <div class="col-md-12">
        <div id="container3" style="min-width:400px;height:400px"></div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div id="container4" style="min-width:400px;height:400px"></div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div style="margin-top:20px;"><span class="tableTitle">顾客满意度</span></div>
        <div id="container5" style="min-width:400px;height:400px"></div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div id="container6" style="min-width:400px;height:400px"></div>
    </div>
</div>

<div class="row gap-top">
    <div class="col-md-12">
        <div id="container7" style="min-width:400px;height:400px"></div>
    </div>
</div>
