@{
    Layout = "_LayoutMenu";
    ViewData["Title"] = "任务卡制作";
}
@section Scripts{

    <style type="text/css">
        #txtReason {
            height: 150px;
            max-height: 150px;
            max-width: 735px;
        }

        .text-left {
            max-width: 100%;
        }
    </style>
    <!-- 1. Load -->
    <script type="text/javascript">
        var _nowDate = '@ViewBag.NowDate';
        var _execute = '';
        $(document).ready(function () {
            InitData();
            Initialize();
        });
    </script>
    <!-- 2. Init -->
    <script type="text/javascript">
        var trange = "";
        function Initialize() {
            if ('@Context.Request.Cookies[SessionKeys.SESSION_USERTYPE]' == 'R') {
                $("#rdo").attr("readonly", "readonly");
                $("#fullAllAttend").css("display", "none");
                $("#fullAttend").css("display", "");
                $("#continuousAttend").css("display", "none");
                trange = "I";
                //$("[name=searchType]")[2].checked = true;
                //var input = $("#rdo").find("input:radio");
                //input.attr("disabled", "disabled");
            } else if ('@Context.Request.Cookies[SessionKeys.SESSION_USERTYPE]' == 'A') {
                $("#rdo").attr("readonly", "readonly");
                $("#fullAllAttend").css("display", "");
                $("#fullAttend").css("display", "none");
                $("#continuousAttend").css("display", "none");
                trange = "L";
                //$("[name=searchType]")[0].checked = true;
                //$("[name=searchType]").css("display","none");
                //var input = $("#rdo").find("input:radio");
                //input.attr("disabled", "disabled");
            } else {
                $("#rdo").attr("readonly", "readonly");
                $("#fullAllAttend").css("display", "none");
                $("#fullAttend").css("display", "none");
                $("#continuousAttend").css("display", "");
                trange = "A";
                //$("[name=searchType]")[1].checked = true;
                //$("[name=searchType]").css("display", "none");
                //var input = $("#rdo").find("input:radio");
                //input.attr("disabled", "disabled");
            }
            fn_GridInit();
            fn_GridInit1();
            fn_GridInit2();
            $("#btnAadd").on("click", function () {
                fn_addStaCardRow("");
            });
            $("#btnAddCheckStandard").on("click", function () {
                fn_addCS();
            });
            $("#btnAddPicStandard").on("click", function () {
                fn_addPS();
            });
            $("#btnSave").on("click", function () {
                fn_Save();
            });
        }
        function InitData() {
            fn_initType();
            fn_initsourceType();
            fn_initExecute();
            fn_initTaskCardKind();
        }
    </script>
    <!-- 4. Custom Function -->
    <script type="text/javascript">
        function fn_initType() {
            //$.sa.get('http://toyotaqaapi.elandcloud.com/toyota/api/v1/PlanTask/GetStatus',
            $.sa.get(TASKGETSTATUS,
                           { GroupCode: '10' },
                           {
                               "success": function (data) {
                                   if (data != null) {
                                       $('#selType').html(JsonToCboList("Name", "Value", JSON.parse(data.body), { "SelectType": "SELECT" }));
                                       //$.sa.warning(data.body);
                                   }
                               },
                               "failure": function (data, statusText, jqXHR) {
                                   $.sa.warning(data.msg);
                               }
                           });
        }
        function fn_initsourceType() {
            //$.sa.get('http://toyotaqaapi.elandcloud.com/toyota/api/v1/PlanTask/GetStatus',
            $.sa.get(TASKGETSTATUS,
                           { GroupCode: '15' },
                           {
                               "success": function (data) {
                                   if (data != null) {
                                       $('#selsourceType').html(JsonToCboList("Name", "Value", JSON.parse(data.body), { "SelectType": "SELECT" }));
                                       //$.sa.warning(data.body);
                                   }
                               },
                               "failure": function (data, statusText, jqXHR) {
                                   $.sa.warning(data.msg);
                               }
                           });
        }
        function fn_initExecute() {
            //$.sa.get('http://toyotaqaapi.elandcloud.com/toyota/api/v1/PlanTask/GetStatus',
            $.sa.get(TASKGETSTATUS,
                           { GroupCode: '13' },
                           {
                               "success": function (data) {
                                   if (data != null) {
                                       var json = JSON.parse(data.body);
                                       for (var i = 0; i < json.length; i++) {
                                           _execute += ';' + json[i].Value + ':' + json[i].Name;
                                       }
                                       _execute = _execute.substring(1);
                                       //$.sa.warning(data.body);
                                   }
                               },
                               "failure": function (data, statusText, jqXHR) {
                                   $.sa.warning(data.msg);
                               }
                           });
        }

        function fn_initTaskCardKind() {
            //$.sa.get('http://toyotaqaapi.elandcloud.com/toyota/api/v1/PlanTask/GetStatus',
            $.sa.get(TASKGETSTATUS,
                           { GroupCode: '16' },
                            {
                                "success": function (data) {
                                    if (data != null) {
                                        $('#selKind').html(JsonToCboList("Name", "Value", JSON.parse(data.body), { "SelectType": "SELECT" }));
                                        //$.sa.warning(data.body);
                                    }
                                },
                                "failure": function (data, statusText, jqXHR) {
                                    $.sa.warning(data.msg);
                                }
                            });
        }

        function fn_addStaCardRow(obj) {
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridStandardPic"));
            var ids = $("#gridItemsofPlan").getDataIDs();
            var pref = $.jgrid.uidPref;
            var newid = 1;
            if (ids && ids.length > 0) {
                var regx = new RegExp(pref, 'g');
                var nids = ids.join(',').replace(regx, '').split(',');
                var maxid = Math.max.apply(Math, nids);
                newid = maxid + 1;
            }
            newid = pref + (newid).toString();
            var rowdata;
            rowdata = {
                SeqNo: ids.length + 1,
                Title: "",
                ExeMode: "",
                ScoreStandard: "",
                InDateTime: _nowDate,
                InUserId: '@Context.Request.Cookies[SessionKeys.SESSION_NAME]',
                TIRowId: newid
            };
            $("#gridItemsofPlan").addRowData(newid, rowdata, 'last');
            $($("#gridItemsofPlan").getGridRowById(newid)).addClass("edited");
        }
        function fn_DeleteTaskPlan(obj) {
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridStandardPic"));
            //$.sa.warning(obj.id);
            var rowdata;
            var id;
            if (obj.id == undefined) {
                if (obj.length > 0) {
                    rowdata = $("#gridItemsofPlan").jqGrid("getRowData", obj[0].id);
                    id = obj[0].id;
                } else {
                    rowdata = $("#gridItemsofPlan").jqGrid("getRowData", obj);
                    id = obj;
                }
                $("#gridItemsofPlan").delRowData(obj.length > 0 ? obj[0].id : obj);
            } else {
                rowdata = $("#gridItemsofPlan").jqGrid("getRowData", obj.id);
                id = obj.id;
                $("#gridItemsofPlan").delRowData(obj.id);
            }
            var ids = $("#gridItemsofPlan").getDataIDs();
            if (ids && ids.length > 0) {
                for (var i = 0; i < ids.length; i++) {
                    $("#gridItemsofPlan").jqGrid("setCell", ids[i], "SeqNo", i + 1);
                }
            }
            var ids = $("#gridCheckStandard").getDataIDs();
            if (ids && ids.length > 0) {
                for (var j = 0; j < ids.length; j++) {
                    CSList.push($("#gridCheckStandard").jqGrid("getRowData", ids[j]));
                }
            }

            var idps = $("#gridStandardPic").getDataIDs();
            if (idps && idps.length > 0) {
                for (var j = 0; j < idps.length; j++) {
                    PSList.push($("#gridStandardPic").jqGrid("getRowData", idps[j]));
                }
            }

            var tmplist = [];
            for (var i = 0; i < CSList.length; i++) {
                if (CSList[i].TIRowId != id) {
                    tmplist.push(CSList[i]);
                }
            }
            CSList = tmplist;

            var tmplistp = [];
            for (var i = 0; i < PSList.length; i++) {
                if (PSList[i].TIRowId != id) {
                    tmplistp.push(PSList[i]);
                }
            }
            PSList = tmplistp;
            fn_SetGrid1();
            fn_SetGrid2();
            var idtis = $("#gridItemsofPlan").getDataIDs();
            if (idtis || idtis.length == 0) {
                rowidcs = "";
                rowidps = "";
            }
        }
        var CSList = [];
        var PSList = [];
        var rowidcs = "";
        var rowidps = "";
        function fn_AddCheckStandard(obj) {
            fn_saveCell.call($("#gridStandardPic"));
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridItemsofPlan"));
            rowidcs = obj;
            var ids = $("#gridCheckStandard").getDataIDs();
            if (ids && ids.length > 0) {
                for (var j = 0; j < ids.length; j++) {
                    CSList.push($("#gridCheckStandard").jqGrid("getRowData", ids[j]));
                }
            }
            var showlist = [];
            if (CSList.length > 0) {
                for (var k = 0; k < CSList.length; k++) {
                    if (rowidcs == CSList[k].TIRowId) {
                        showlist.push(CSList[k]);
                    }
                }
            }
            fn_SetGrid1(showlist);
            var tmplist = [];
            for (var i = 0; i < CSList.length; i++) {
                if (CSList[i].TIRowId != rowidcs) {
                    tmplist.push(CSList[i]);
                }
            }
            CSList = tmplist;
        }
        function fn_AddPictureStandard(obj) {
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridStandardPic"));
            rowidps = obj;
            var ids = $("#gridStandardPic").getDataIDs();
            if (ids && ids.length > 0) {
                for (var j = 0; j < ids.length; j++) {
                    PSList.push($("#gridStandardPic").jqGrid("getRowData", ids[j]));
                }
            }
            var showlist = [];
            if (PSList.length > 0) {
                for (var k = 0; k < PSList.length; k++) {
                    if (rowidps == PSList[k].TIRowId) {
                        showlist.push(PSList[k]);
                    }
                }
            }
            fn_SetGrid2(showlist);
            var tmplist = [];
            for (var i = 0; i < PSList.length; i++) {
                if (PSList[i].TIRowId != rowidps) {
                    tmplist.push(PSList[i]);
                }
            }
            PSList = tmplist;

        }
        function fn_addCS() {
            if (rowidcs == "") {
                $.sa.warning("请先查询检查标准.");
                return;
            }
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridStandardPic"));
            var ids = $("#gridCheckStandard").getDataIDs();
            var pref = $.jgrid.uidPref;
            var newid = 1;
            if (ids && ids.length > 0) {
                var regx = new RegExp(pref, 'g');
                var nids = ids.join(',').replace(regx, '').split(',');
                var maxid = Math.max.apply(Math, nids);
                newid = maxid + 1;
            }
            newid = pref + (newid).toString();
            var rowdata;
            rowdata = {
                CContent: "",
                Delete: "",
                TIRowId: rowidcs
            };
            $("#gridCheckStandard").addRowData(newid, rowdata, 'last');
            $($("#gridCheckStandard").getGridRowById(newid)).addClass("edited");
        }
        function fn_addPS() {
            if (rowidps == "") {
                $.sa.warning("请先查询标准图片.");
                return;
            }
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridStandardPic"));
            var ids = $("#gridStandardPic").getDataIDs();
            var pref = $.jgrid.uidPref;
            var newid = 1;
            if (ids && ids.length > 0) {
                var regx = new RegExp(pref, 'g');
                var nids = ids.join(',').replace(regx, '').split(',');
                var maxid = Math.max.apply(Math, nids);
                newid = maxid + 1;
            }
            newid = pref + (newid).toString();
            var rowdata;
            rowdata = {
                StandardPicName: "",
                Delete: "",
                TIRowId: rowidps
            };
            $("#gridStandardPic").addRowData(newid, rowdata, 'last');
            $($("#gridStandardPic").getGridRowById(newid)).addClass("edited");
        }
        function fn_delCS(obj) {
            var id;
            if (obj.id == undefined) {
                if (obj[0] == undefined) {
                    id = obj;
                } else {
                    id = obj[0].id;
                }
            } else {
                id = obj.id;
            }
            $("#gridCheckStandard").delRowData(id);
        }
        function fn_delPS(obj) {
            var id;
            if (obj.id == undefined) {
                if (obj[0] == undefined) {
                    id = obj;
                } else {
                    id = obj[0].id;
                }
            } else {
                id = obj.id;
            }
            $("#gridStandardPic").delRowData(id);
        }

        function fn_Save() {
            fn_saveCell.call($("#gridCheckStandard"));
            fn_saveCell.call($("#gridItemsofPlan"));
            fn_saveCell.call($("#gridStandardPic"));
            if (Validate()) {
                $.sa.confirm("是否要保存?", {
                    fnOk: function () {
                        $(".close").click();
                        var idcs = $("#gridCheckStandard").getDataIDs();
                        if (idcs && idcs.length > 0) {
                            for (var i = 0; i < idcs.length; i++) {
                                CSList.push($("#gridCheckStandard").jqGrid("getRowData", idcs[i]));
                            }
                        }
                        var idps = $("#gridStandardPic").getDataIDs();
                        if (idps && idps.length > 0) {
                            for (var m = 0; m < idps.length; m++) {
                                PSList.push($("#gridStandardPic").jqGrid("getRowData", idps[m]));
                            }
                        }
                        var taskitem = [];
                        var idtis = $("#gridItemsofPlan").getDataIDs();
                        if (idtis && idtis.length > 0) {
                            for (var n = 0; n < idtis.length; n++) {
                                taskitem.push($("#gridItemsofPlan").jqGrid("getRowData", idtis[n]));
                            }
                        }
                        var tctype = $("#selType").val();
                        var tctitle = $("#txtTitle").val();
                        var tcRange = trange; //$("[name=searchType]").filter(":Checked").val();
                        var txtReason = $("#txtReason").val();
                        var sourcetype = $("#selsourceType").val();
                        var kind = $("#selKind").val();
                        var item = { TCType: tctype, TCRange: tcRange, TCTitle: tctitle, SourceType: "D", TCDescription: txtReason, InUserId: '@Context.Request.Cookies[SessionKeys.SESSION_USERID]',Kind:kind ,TaskItem: taskitem, XmlDataS: CSList, XmlDataP: PSList }
                        //$.sa.post('http://localhost:6505/toyota/api/v1/PlanTask/CreateTaskCard',
                        $.sa.post(TASKCREATETASKCARD,
                                          JSON.stringify(item),
                          {
                              "success": function (data) {
                                  if (data != null && data.msg == "") {
                                      fn_SetGrid();
                                      fn_SetGrid1();
                                      fn_SetGrid2();
                                      CSList = [];
                                      PSList = [];
                                      rowidcs = "";
                                      rowidps = "";
                                      $("#selType").val("select");
                                      $("#txtTitle").val("");
                                      //$("[name=searchType]")[0].checked = false;
                                      //$("[name=searchType]")[1].checked = false;
                                      $("#txtReason").val("");
                                      $("#selKind").val("select");
                                      $.sa.warning("保存成功！");
                                      //fn_ClosePlan();
                                  } else {
                                      $.sa.warning("保存失败！");
                                      //fn_SetGrid("");
                                  }
                              },
                              "failure": function (data, statusText, jqXHR) {
                                  //fn_SetGrid("");
                                  $.sa.warning(data.msg);
                              }
                          }, $("body"));
                    }
                });
            }
        }
        function fn_saveCell() {
            var $t = $(this);
            var $ecs = $(".edit-cell", $t);
            $ecs.each(function (idx, ec) {
                var iRow = $(ec).parent().index();
                var iCol = $(ec).index();
                $t.saveCell(iRow, iCol);
            });
        }
        function Validate() {
            var tctype = $("#selType").val();
            var tctitle = $("#txtTitle").val();
            var tcRange = trange;//$("[name=searchType]").filter(":Checked").val();
            var txtReason = $("#txtReason").val();
            var validate = true;
            var ids = $("#gridItemsofPlan").getDataIDs();
            var sourcetype = $("#selsourceType").val();
            var kind = $("#selKind").val();
            if (tctype == "select") {
                $.sa.warning("请选择任务卡类型。");
                validate = false;
                return;
            } else if (tctitle == "" || tctitle == null) {
                $.sa.warning("请输入任务卡简称。");
                validate = false;
                return;
            } else if (tcRange == null || tcRange == "") {
                $.sa.warning("请选择适用范围。");
                validate = false;
                return;
            } else if (txtReason == "" || txtReason == null) {
                $.sa.warning("请输入任务卡简述。");
                validate = false;
                return;
            } else if (kind == "select") {
                $.sa.warning("请选择任务卡种类。");
                validate = false;
                return;
            } else if (ids && ids.length > 0) {
                var issame = true;
                var isnull = true;
                for (var i = 0; i < ids.length; i++) {
                    var rowdata = $("#gridItemsofPlan").jqGrid("getRowData", ids[i]);
                    for (var j = 0; j < ids.length; j++) {
                        var rowdatad = $("#gridItemsofPlan").jqGrid("getRowData", ids[j]);
                        if (rowdata.SeqNo == rowdatad.SeqNo && ids[i] != ids[j]) {
                            issame = false;
                            break;
                        }
                    }
                }
                if (!issame) {
                    $.sa.warning("体系的执行顺序不能相同。");
                    validate = false;
                    return;
                }
                for (var k = 0; k < ids.length; k++) {
                    var rowdata = $("#gridItemsofPlan").jqGrid("getRowData", ids[k]);
                    if (rowdata.Title == "" || rowdata.Title == null) {
                        isnull = false;
                        break;
                    }
                }
                if (!isnull) {
                    $.sa.warning("指标名称不能为空。");
                    validate = false;
                    return;
                }
            } else if (ids.length == 0) {
                $.sa.warning("任务卡必须有体系。");
                validate = false;
                return;
            }
            var csnull = true;
            var temp = [];
            var itemhavecs = true;
            if (CSList.length > 0) {
                for (var i = 0; i < CSList.length; i++) {
                    if (CSList[i].Title == "") {
                        csnull = false;
                        break;
                    }
                }
            }
            var csids = $("#gridCheckStandard").getDataIDs();
            if (csids && csids.length > 0) {
                for (var s = 0; s < csids.length; s++) {
                    var csdata = $("#gridCheckStandard").jqGrid("getRowData", csids[s]);
                    temp.push(csdata);
                    if (csdata.CContent == "") {
                        csnull = false;
                        break;
                    }
                }
            }
            if (!csnull) {
                $.sa.warning("检查标准内容不能为空。");
                validate = false;
                return;
            }
            for (var g = 0; g < CSList.length; g++) {
                temp.push(CSList[g]);
            }
            for (var d = 0; d < ids.length; d++) {
                var temphave = false;
                for (var f = 0; f < temp.length; f++) {
                    if (ids[d] == temp[f].TIRowId) {
                        temphave = true;
                        break;
                    }
                }
                if (!temphave) {
                    itemhavecs = false;
                }
            }
            if (!itemhavecs) {
                $.sa.warning("体系须有检查标准。");
                validate = false;
                return;
            }

            if (temp.length == 0) {
                $.sa.warning("体系须有检查标准。");
                validate = false;
                return;
            }
            return validate;
        }
    </script>
    <!-- 5. Grid -->
    <script type="text/javascript">
        function fn_GridInit() {
            $('#gridItemsofPlan').jqGrid({
                datatype: 'local',
                colModel: [
                    {
                        name: 'SeqNo', label: '执行顺序', width: 90, align: 'center', editable: true, edittype: 'select'
                    },
                    {
                        name: 'Title', label: '指标名称', width: 250, align: 'left', editable: true
                    },
                    {
                        name: 'Rate', label: '检查标准', width: 100, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }, formatter: function (v, o, r) {
                            return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_AddCheckStandard(\'' + o.rowId + '\')">检查标准</button>';
                        }, unformat: function () {
                            return 0;
                        }
                    },
                    {
                        name: 'Rate', label: '标准图片', width: 100, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }, formatter: function (v, o, r) {
                            return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_AddPictureStandard(\'' + o.rowId + '\')">标准图片</button>';
                        }, unformat: function () {
                            return 0;
                        }
                    },
                    {
                        name: 'ExeMode', label: '执行方式', width: 120, align: 'center', editable: true, edittype: 'select', formatter: 'select'
                        , editoptions: {
                            'class': 'form-control'
                        }
                    },
                    {
                        name: 'ScoreStandard', label: '评分标准', width: 120, align: 'left', editable: false,
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="dotdotdot"';
                        }
                    },
                    {
                        name: 'InDateTime', label: '登记时间', width: 110, align: 'center', editable: false
                    },
                    {
                        name: 'InUserId', label: '登记人', width: 100, align: 'center', editable: false
                    },
                    {
                        name: 'Delete', label: '删除', width: 90, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }, formatter: function (v, o, r) {
                            return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_DeleteTaskPlan(' + o.rowId + ')">删除</button>';
                        }, unformat: function (v, o, r) {
                            return "";
                        }
                    },
                    {
                        name: 'TIRowId', label: '登记人', width: 100, align: 'left', hidden: true
                    }
                ],
                width: $('#Grid').width(),
                shrinkToFit: false,
                height: 'auto',
                rownumbers: true,
                rownumWidth: 50,
                rowNum: 15,
                rowList: [15, 30, 45],
                footerrow: false,
                cellsubmit: 'clientArray',
                pager: jQuery('#pager'),
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                //autoScroll: false,
                gridComplete: function () {
                    //var ids = $("#gridPlans").getDataIDs();
                    //if (ids.length > 0) {
                    //    for (var i = 0; i <ids.length; i++) {
                    //        var rowdata = $("#gridPlans").jqGrid("getRowData", ids[i]);
                    //        if (rowdata.TCId!="") {
                    //            $("#gridPlans").setCell(ids[i], { 'editable': false });
                    //        }
                    //    }

                    //}
                    fn_tipped("gridItemsofPlan", "ScoreStandard", { "tipTitle": '评分标准', "tipType": "E", "tipWidth": "200px" });
                    var rowNum = parseInt($(this).getGridParam("records"), 50);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                        // ShowNoDataDiv("grid","msg","没有数据");
                    }

                    //fix the pager position
                    $('#pager_left').css('width', '25%');
                    $('#pager_right').css('width', '25%');

                    $("[aria-describedby='gridItemsofPlan_rn']").addClass("readonlycell");
                },
                onCellSelect: function (rowid, iCol, cellcontent, e) {
                    $("#gridItemsofPlan").setColProp('SeqNo', { editoptions: { value: gettype() } });
                    $("#gridItemsofPlan").setColProp('ExeMode', { editoptions: { value: _execute } });
                    fn_AddCheckStandard(rowid);
                    fn_AddPictureStandard(rowid);
                    rowidcs = rowid;
                    rowidps = rowid;
                }

            });
        }
        function fn_GridInit1() {
            $('#gridCheckStandard').jqGrid({
                datatype: 'local',
                colModel: [
                    {
                        name: 'CContent', label: '检查标准', width: 422, align: 'left', editable: true, edittype: "text", editoptions: { 'class': 'text-left' }
                    },
                    {
                        name: 'Delete', label: '删除', width: 90, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }, formatter: function (v, o, r) {
                            return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_delCS(' + o.rowId + ')">删除</button>';
                        }, unformat: function (v, o, r) {
                            return "";
                        }
                    },
                    {
                        name: 'TIRowId', label: 'TIRowId', width: 103, align: 'center', hidden: true

                    }
                ],
                width: $('#Grid1').width(),
                shrinkToFit: false,
                height: 'auto',
                rownumbers: true,
                rownumWidth: 30,
                rowNum: 30,
                rowList: [50, 100, 300],
                footerrow: false,
                cellsubmit: 'clientArray',
                //pager: jQuery('#pager1'),
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                //autoScroll: false,
                gridComplete: function () {
                    //var ids = $("#gridPlans").getDataIDs();
                    //if (ids.length > 0) {
                    //    for (var i = 0; i <ids.length; i++) {
                    //        var rowdata = $("#gridPlans").jqGrid("getRowData", ids[i]);
                    //        if (rowdata.TCId!="") {
                    //            $("#gridPlans").setCell(ids[i], { 'editable': false });
                    //        }
                    //    }

                    //}
                    var rowNum = parseInt($(this).getGridParam("records"), 50);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                        // ShowNoDataDiv("grid","msg","没有数据");
                    }

                    //fix the pager position
                    $('#pager_left').css('width', '25%');
                    $('#pager_right').css('width', '25%');

                    $("[aria-describedby='gridCheckStandard_rn']").addClass("readonlycell");
                }
            });
        }
        function fn_GridInit2() {
            $('#gridStandardPic').jqGrid({
                datatype: 'local',
                colModel: [
                    {
                        name: 'StandardPicName', label: '图片名称', width: 422, align: 'left', editable: true,
                        edittype: "text", editoptions: { 'class': 'text-left' }
                    },
                    {
                        name: 'Delete', label: '删除', width: 90, align: 'center',
                        cellattr: function (rowId, val, rawObject, cm, rdata) {
                            return 'class="readonlycell"';
                        }, formatter: function (v, o, r) {
                            return '<button type="button" class="btn btn-primary btn-sm"  style="width:100%;"  onclick="fn_delPS(' + o.rowId + ')">删除</button>';
                        }, unformat: function (v, o, r) {
                            return "";
                        }
                    },
                     {
                         name: 'TIRowId', label: 'TIRowId', width: 103, align: 'center', hidden: true

                     }
                ],
                width: $('#Grid2').width(),
                shrinkToFit: false,
                height: 'auto',
                rownumbers: true,
                rownumWidth: 30,
                rowNum: 30,
                rowList: [50, 100, 300],
                footerrow: false,
                cellsubmit: 'clientArray',
                //pager: jQuery('#pager2'),
                cellEdit: true,
                editurl: 'clientArray',
                viewrecords: true,
                //autoScroll: false,
                gridComplete: function () {
                    //var ids = $("#gridPlans").getDataIDs();
                    //if (ids.length > 0) {
                    //    for (var i = 0; i <ids.length; i++) {
                    //        var rowdata = $("#gridPlans").jqGrid("getRowData", ids[i]);
                    //        if (rowdata.TCId!="") {
                    //            $("#gridPlans").setCell(ids[i], { 'editable': false });
                    //        }
                    //    }

                    //}
                    var rowNum = parseInt($(this).getGridParam("records"), 50);
                    if (rowNum > 0) {
                        $(".ui-jqgrid-sdiv").show();
                    }
                    else {
                        $(".ui-jqgrid-sdiv").hide();
                        // ShowNoDataDiv("grid","msg","没有数据");
                    }

                    //fix the pager position
                    $('#pager_left').css('width', '25%');
                    $('#pager_right').css('width', '25%');

                    $("[aria-describedby='gridCheckStandard_rn']").addClass("readonlycell");
                }
            });
        }
        function gettype() {
            var ids = $("#gridItemsofPlan").getDataIDs();
            var countries = "";
            if (ids && ids.length > 0) {
                for (var i = 0; i < ids.length; i++) {
                    if (i != ids.length - 1) {
                        countries += (i + 1) + ":" + (i + 1) + ";";
                    } else {
                        countries += (i + 1) + ":" + (i + 1);
                    }
                }
            } else {
                countries = 1 + ":" + 1;
            }
            //alert(countries);
            return countries;
        }
        function fn_SetGrid(mydata) {
            mydata = mydata || [];
            $('#gridItemsofPlan').clearGridData()
            .setGridParam({
                data: mydata
            }).trigger('reloadGrid');
        }
        function fn_SetGrid1(mydata) {
            mydata = mydata || [];
            $('#gridCheckStandard').clearGridData()
            .setGridParam({
                data: mydata
            }).trigger('reloadGrid');
        }
        function fn_SetGrid2(mydata) {
            mydata = mydata || [];
            $('#gridStandardPic').clearGridData()
            .setGridParam({
                data: mydata
            }).trigger('reloadGrid');
        }
    </script>
}
<div class="">
    <div class="row" style="margin-top:10px;">
        <div class="col-md-12">
            <span class="fa fa-flag fa-lg gap-icon"></span><span class="page-mtitle">计划任务</span><span>&nbsp;>&nbsp;</span><span class="page-title">任务卡制作</span>
            <div class="pull-right">
                <button id="btnSave" class="btn btn-primary">
                    <span class="fa fa-save gap-icon"></span>保存
                </button>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:10px;">
        <div class="col-md-3">
            <div class="input-group">
                <span class="input-group-addon title-sm">任务卡类型</span>
                <select class="form-control" id="selType"></select>
            </div>
        </div>
        <div class="col-md-6">
            <div class="input-group ">
                <span class="input-group-addon title-sm">任务卡简称</span>
                <input size="16" type="text" value="" class="form-control" id="txtTitle" />
            </div>
        </div>
        <div class="col-xs-3">
            <div class="input-group">
                <span class="input-group-addon title-sm ">适用范围</span>
                <div class="form-control" id="rdo">
                    <label class="" id="fullAllAttend" style="font-weight:normal">
                        全国通用
                    </label>
                    <label class="" id="fullAttend" style="font-weight:normal">
                        大区通用
                    </label>
                    <label class="" id="continuousAttend" style="font-weight:normal">
                        区域通用
                    </label>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:10px;">
        <div class="col-md-3">
            <div class="input-group">
                <span class="input-group-addon title-sm">任务卡种类</span>
                <select class="form-control" id="selKind"></select>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:10px;">
        <div class="col-md-3" style="display:none;">
            <div class="input-group">
                <span class="input-group-addon title-sm">来源类型</span>
                <select class="form-control" id="selsourceType"></select>
            </div>
        </div>
    </div>
    <div class="row" style="padding-top:10px;">
        <div class="col-md-12 col-sm-12">
            <div class="input-group">
                <span class="input-group-addon title-sm">任务卡简述</span>
                <textarea class="form-control" id="txtReason"></textarea>
            </div>
        </div>
    </div>
    <div class="row" style="padding-top:10px;">
        <div class="col-md-12">
            <div class="pull-right">
                <button class="btn btn-primary" id="btnAadd">
                    <span class="fa fa-plus gap-icon"></span>添加体系
                </button>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="Grid" class="col-md-12" style="margin-top:10px;">
            <table id="gridItemsofPlan" class="ui-jqgrid-htable"></table>
            <div id="pager" class="page">
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:10px;">
        <div class="col-md-12">
            <div class="col-md-6  col-sm-6  gap-top">
                <div style="padding-left:5px; padding-top:13px;"><span class="fa fa-angle-double-right">检查标准</span></div>
                <div class="col-md-12" style="padding-left:5px;">
                    <div class="pull-right">
                        <button class="btn btn-primary" id="btnAddCheckStandard">
                            <span class="fa fa-plus gap-icon"></span>添加检查标准
                        </button>
                    </div>
                </div>
                <div id="Grid1" class="col-md-12" style="margin-top:5px;">
                    <table id="gridCheckStandard" class="ui-jqgrid-htable"></table>
                    <div id="pager1" class="page">
                    </div>
                </div>
            </div>
            <div class="col-md-6  col-sm-6  gap-top">
                <div style="padding-left:5px; padding-top:13px;"><span class="fa fa-angle-double-right">照片标准</span></div>
                <div class="col-md-12">
                    <div class="pull-right" style="padding-left:5px;">
                        <button class="btn btn-primary" id="btnAddPicStandard">
                            <span class="fa fa-plus gap-icon"></span>添加图片标准
                        </button>
                    </div>
                </div>
                <div id="Grid2" class="col-md-12" style="margin-top:5px;">
                    <table id="gridStandardPic" class="ui-jqgrid-htable"></table>
                    <div id="pager2" class="page">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>